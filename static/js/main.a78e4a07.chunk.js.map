{"version":3,"sources":["components/dashboard/giant-bomb/config.js","components/base/list/item/components/Title.jsx","components/base/list/item/components/Subtitle.jsx","components/base/list/item/components/Image.jsx","components/base/list/item/Item.jsx","components/base/list/dialog/Dialog.jsx","components/base/list/List.jsx","components/base/list/FetchWithInterval.jsx","components/base/list/ListWithFetch.jsx","components/dashboard/upcoming-music/UpcomingMusic.jsx","components/dashboard/upcoming-music/NewMusic.jsx","components/dashboard/game-releases/GameReleases.jsx","components/dashboard/recipes/Recipes.jsx","components/dashboard/time/TimeView.jsx","components/dashboard/time/Time.jsx","components/dashboard/weather/config.js","components/dashboard/weather/WeatherView.jsx","components/dashboard/weather/Weather.jsx","components/dashboard/philips-hue/config.js","components/dashboard/philips-hue/PhilipsHueLight.jsx","components/dashboard/philips-hue/PhilipsHueLightList.jsx","components/dashboard/philips-hue/PhilipsHue.jsx","components/dashboard/news/News.jsx","components/dashboard/systembolaget/UpcomingBeer.jsx","components/dashboard/stocks/Stocks.jsx","components/dashboard/sunrise-sunset/SunriseSunset.jsx","App.js","components/dashboard/giant-bomb/UpcomingVideos/UpcomingVideos.jsx","components/dashboard/xbox-wire/News.jsx","components/dashboard/giant-bomb/LatestVideos/LatestVideos.jsx","components/dashboard/recipes/RecipesBA.jsx","components/dashboard/allsvenskan/Standings.jsx","components/dashboard/elitserien-bandy/Standings.jsx","components/dashboard/podcasts/Podcasts.jsx","serviceWorker.js","index.js"],"names":["API_KEY","API_URL","Title","_ref","title","loading","link","large","react_default","a","createElement","className","textClasses","concat","href","target","rel","Subtitle","subtitle","Image","url","alt","show","textOverlay","img","src","Item","item","showImage","subtitleOverImage","largeTitle","imageUrl","defaultProps","ListDialog","list","open","onClose","noImages","limitTo","Dialog_default","aria-labelledby","List","Object","assign","items","label","firstItemSubtitleOnImage","_useState","useState","_useState2","slicedToArray","dialogOpen","setDialogOpen","toConsumableArray","Array","keys","map","i","key","moment","format","slice","length","Button_default","size","color","onClick","FetchWithInterval","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","fetch","_this$props","params","headers","axios","get","then","response","setState","error","state","intervalId","_this2","_this$props2","fetchInterval","mocked","setInterval","clearInterval","_this$state","_this$props3","children","Component","ListWithFetch","nItemsDisplay","nItemsTotal","transformResponse","transformItem","mockedItem","FetchWithInterval_FetchWithInterval","undefined","GENRE_ID_LIST","PLATFORM_IDS","getFirstImageSource","s","tmp","document","innerHTML","querySelector","getAttribute","Time","time","updateTime","TimeView_Time","Weather","weather","Math","round","temperature","description","fetchWeather","appid","q","units","data","main","temp","WeatherView_Weather","PhilipsHueLight","light","on","circleColor","type","id","name","PhilipsHueLightList","lights","onLightClicked","onAllLightsClicked","allLightsOn","filter","allLightsButtonClasses","PhilipsHue","fetchLights","forEach","push","objectSpread","prevState","put","News","_ref2","defineProperty","value","articles","urlToImage","publishedAt","fromNow","LABEL","Stocks","stocks","stock","index","outputsize","apikey","symbol","function","dataWithDates","date","sortedDataWithDates","sort","b","latestValue","nextToLatestValue","latestClose","nextToLatestClose","latestCloseRounded","toFixed","isValueIncreasedSinceYesterday","percentageDiffSinceYesterday","percentageDiffSinceAcquired","acquiredAt","SunriseSunset","lat","lng","sunrise","getSunrise","sunset","getSunset","components","liveNow","upcoming","add","calendar","Fragment","image","api_key","results","game","platforms","platform","includes","expected_release_month","expected_release_day","expected_release_year","subtract","medium_url","site_detail_url","lastDay","sameDay","nextDay","lastWeek","nextWeek","sameElse","feed","album","genres","genre","genreId","artistName","releaseDate","artworkUrl100","xmlParser","parse","ignoreAttributes","rss","channel","pubDate","field_list","publish_date","currentMonth","month","result","position","team","points","Ocp-Apim-Subscription-Key","SortBy","SubCategory","SellStartDateFrom","SellStartDateTo","beersInStore","Hits","beer","IsInStoreSearchAssortment","ProductNameBold","ProductNameThin","SellStartDate","trim","replace","toLowerCase","ProductNumber","componentWidth","componentPadding","App","Time_Time","Weather_Weather","PhilipsHue_PhilipsHue","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a78e4a07.chunk.js","sourcesContent":["export const API_KEY = 'd6570a6b091038395145cafcf7d50ae3bef07e5a';\nexport const API_URL = 'https://www.giantbomb.com/api/';\nexport const GAME_URL = 'https://www.giantbomb.com/game/';\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n\nexport default function Title({\n  title, loading, link, large,\n}) {\n  if (loading) {\n    return <div className=\"bg-dark-gray h1 w5 mv2\" />;\n  }\n\n  const textClasses = `${large ? 'f6 b' : 'f6 fw5'} db sans-serif mv2 near-white`;\n  if (link) {\n    return (\n      <a\n        href={link}\n        className={`${textClasses} link truncate-two-lines`}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        {title}\n      </a>\n    );\n  }\n\n  return (\n    <span className={textClasses}>\n      {title}\n    </span>\n  );\n}\n\nTitle.propTypes = {\n  title: PropTypes.string,\n  loading: PropTypes.bool,\n  link: PropTypes.string,\n  large: PropTypes.bool,\n};\n\nTitle.defaultProps = {\n  title: '',\n  loading: false,\n  link: null,\n  large: false,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n\nexport default function Subtitle({ subtitle, loading }) {\n  if (loading) {\n    return <div className=\"bg-dark-gray h1 w4 mv2\" />;\n  }\n  return (\n    <span className=\"db sans-serif f7 light-silver truncate\">\n      {subtitle}\n    </span>\n  );\n}\n\nSubtitle.propTypes = {\n  subtitle: PropTypes.string,\n  loading: PropTypes.bool,\n};\n\nSubtitle.defaultProps = {\n  loading: false,\n  subtitle: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport default function Image({\n  url, alt, loading, show, textOverlay,\n}) {\n  if (!show) {\n    return null;\n  }\n\n  if (loading) {\n    return <div className=\"h-12-rem bg-dark-gray br2\" />;\n  }\n\n  const img = (\n    <img\n      className=\"h-12-rem contain of-c w-100 br2\"\n      src={url}\n      alt={alt}\n    />\n  );\n\n  if (textOverlay) {\n    return (\n      <div className=\"relative\">\n        {img}\n        <span className=\"darken-bottom db w-100 absolute bottom-0 right-0 tr pv2 ph3 sans-serif white f3 b\">\n          {textOverlay}\n        </span>\n      </div>\n    );\n  }\n\n  return img;\n}\n\nImage.propTypes = {\n  url: PropTypes.string,\n  alt: PropTypes.string.isRequired,\n  loading: PropTypes.bool,\n  show: PropTypes.bool,\n  textOverlay: PropTypes.string,\n};\n\nImage.defaultProps = {\n  url: null,\n  loading: false,\n  show: true,\n  textOverlay: null,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Title from './components/Title';\nimport Subtitle from './components/Subtitle';\nimport Image from './components/Image';\n\nexport default function Item({\n  item, showImage, loading, subtitleOverImage, largeTitle,\n}) {\n  return (\n    <div>\n      <Image\n        textOverlay={subtitleOverImage ? item.subtitle : null}\n        url={item.imageUrl}\n        alt={item.title}\n        show={showImage}\n        loading={loading}\n      />\n      <Title\n        link={item.url}\n        title={item.title}\n        loading={loading}\n        large={largeTitle}\n      />\n      {\n        !subtitleOverImage\n        && (\n        <Subtitle\n          subtitle={item.subtitle}\n          loading={loading}\n        />\n        )\n      }\n    </div>\n  );\n}\n\nItem.propTypes = {\n  item: PropTypes.shape({\n    url: PropTypes.string,\n    imageUrl: PropTypes.string,\n    title: PropTypes.string,\n    subtitle: PropTypes.string,\n  }),\n  showImage: PropTypes.bool.isRequired,\n  loading: PropTypes.bool,\n  subtitleOverImage: PropTypes.bool,\n  largeTitle: PropTypes.bool,\n};\n\nItem.defaultProps = {\n  loading: false,\n  item: {},\n  subtitleOverImage: false,\n  largeTitle: false,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Dialog from '@material-ui/core/Dialog';\n\nimport List from '../List';\n\nexport default function ListDialog({\n  list, open, onClose, noImages, limitTo,\n}) {\n  return (\n    <Dialog\n      aria-labelledby=\"show-all-list-items\"\n      open={open}\n      onClose={onClose}\n    >\n      <div className=\"ph4 pv2 bg-near-black min-w6\">\n        <List\n          limitTo={limitTo}\n          noImages={noImages}\n          {...list}\n        />\n      </div>\n    </Dialog>\n  );\n}\n\nListDialog.propTypes = {\n  list: PropTypes.shape(List.propTypes).isRequired,\n  open: PropTypes.bool.isRequired,\n  onClose: PropTypes.func.isRequired,\n  noImages: PropTypes.bool,\n  limitTo: PropTypes.number,\n};\n\nListDialog.defaultProps = {\n  noImages: false,\n  limitTo: 20,\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport moment from 'moment';\n\nimport Item from './item/Item';\n/* eslint-disable import/no-cycle */\nimport Dialog from './dialog/Dialog';\n\nexport default function List({\n  items, loading, limitTo, label, noImages, firstItemSubtitleOnImage,\n}) {\n  const [dialogOpen, setDialogOpen] = useState(false);\n  function dialogOpenClicked() {\n    setDialogOpen(true);\n  }\n  function dialogCloseClicked() {\n    setDialogOpen(false);\n  }\n\n  if (loading) {\n    return (\n      <div>\n        <h2 className=\"near-white sans-serif f5 mb2\">\n          {label}\n        </h2>\n        {[...Array(limitTo).keys()]\n          .map(i => (\n            <div className=\"mb4\" key={i}>\n              <Item\n                loading={loading}\n                showImage={i < 1 && !noImages}\n              />\n            </div>\n          ))}\n      </div>\n    );\n  }\n\n  return (\n    <div>\n      <h2 className=\"near-white sans-serif f5 mb2\">\n        {label}\n      </h2>\n      <h2 className=\"sans-serif f7 light-silver fw5 mb3\">\n        {`Updated ${moment().format('HH:mm')}`}\n      </h2>\n      {\n        items\n          .slice(0, limitTo)\n          .map((item, i) => (\n            <div className=\"mb3\" key={item.title}>\n              <Item\n                key={item.title}\n                item={item}\n                showImage={i < 1 && !noImages}\n                subtitleOverImage={i < 1 && firstItemSubtitleOnImage}\n                largeTitle={i < 1}\n              />\n            </div>\n          ))\n      }\n      {\n        items.length > limitTo\n        && (\n          <div className=\"tc\">\n            <Button\n              size=\"small\"\n              color=\"primary\"\n              onClick={dialogOpenClicked}\n            >\n          Show more...\n            </Button>\n          </div>\n        )\n    }\n      <Dialog\n        list={{\n          items, loading, label,\n        }}\n        noImages={noImages}\n        open={dialogOpen}\n        onClose={dialogCloseClicked}\n      />\n    </div>\n  );\n}\n\nList.propTypes = {\n  items: PropTypes.arrayOf(Item.propTypes.item),\n  loading: PropTypes.bool,\n  limitTo: PropTypes.number,\n  label: PropTypes.string,\n  noImages: PropTypes.bool,\n  firstItemSubtitleOnImage: PropTypes.bool,\n};\n\nList.defaultProps = {\n  loading: false,\n  items: [],\n  limitTo: 3,\n  label: '',\n  noImages: false,\n  firstItemSubtitleOnImage: false,\n};\n","import { Component } from 'react';\nimport axios from 'axios';\nimport PropTypes from 'prop-types';\n\nexport default class FetchWithInterval extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n      response: [],\n      intervalId: null,\n      error: false,\n    };\n  }\n\n  componentDidMount() {\n    const { fetchInterval, mocked } = this.props;\n    if (mocked) {\n      return;\n    }\n\n    const intervalId = setInterval(() => {\n      this.fetch();\n    }, fetchInterval);\n    this.setState({\n      intervalId,\n    });\n    this.fetch();\n  }\n\n  componentWillUnmount() {\n    const { intervalId } = this.state;\n    clearInterval(intervalId);\n  }\n\n  fetch = () => {\n    const {\n      url, params, headers,\n    } = this.props;\n    axios.get(url, {\n      params, headers: headers || {},\n    }).then((response) => {\n      this.setState({\n        response,\n        loading: false,\n        error: false,\n      });\n    }, (error) => {\n      this.setState({ loading: false, error });\n    });\n  }\n\n  render() {\n    const { loading, response, error } = this.state;\n    const { children, mocked } = this.props;\n    if (mocked) {\n      return children(mocked, false, null);\n    }\n    return children(response, loading, error);\n  }\n}\n\nFetchWithInterval.propTypes = {\n  fetchInterval: PropTypes.number,\n  url: PropTypes.string.isRequired,\n  children: PropTypes.func.isRequired,\n  params: PropTypes.objectOf(PropTypes.string),\n  headers: PropTypes.objectOf(PropTypes.string),\n};\n\nFetchWithInterval.defaultProps = {\n  fetchInterval: 60000,\n  params: null,\n  headers: null,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport List from './List';\nimport FetchWithInterval from './FetchWithInterval';\n\nexport default function ListWithFetch({\n  url, label, params, fetchInterval, nItemsDisplay,\n  noImages, nItemsTotal, transformResponse, transformItem, mocked,\n  firstItemSubtitleOnImage,\n}) {\n  if (mocked) {\n    return (\n      <List\n        label={label}\n        noImages={noImages}\n        limitTo={nItemsDisplay}\n        firstItemSubtitleOnImage={firstItemSubtitleOnImage}\n        items={transformResponse(mocked)\n          .map(mockedItem => transformItem(mockedItem))\n          .slice(0, nItemsTotal)}\n      />\n    );\n  }\n  return (\n    <FetchWithInterval\n      url={url}\n      params={params}\n      fetchInterval={fetchInterval}\n    >\n      {(response, loading, error) => {\n        if (loading) {\n          return (\n            <List\n              label={label}\n              noImages={noImages}\n              loading\n            />\n          );\n        }\n\n        if (error) {\n          return null;\n        }\n\n        if (response) {\n          const items = transformResponse(response);\n          if (!items || !items.length) {\n            return null;\n          }\n          return (\n            <List\n              label={label}\n              noImages={noImages}\n              limitTo={nItemsDisplay}\n              firstItemSubtitleOnImage={firstItemSubtitleOnImage}\n              items={items\n                .map(item => transformItem(item))\n                .slice(0, nItemsTotal)}\n            />\n          );\n        }\n\n        return null;\n      }}\n    </FetchWithInterval>\n  );\n}\n\nListWithFetch.propTypes = {\n  url: PropTypes.string.isRequired,\n  params: PropTypes.string,\n  label: PropTypes.string,\n  fetchInterval: PropTypes.number,\n  nItemsDisplay: PropTypes.number,\n  nItemsTotal: PropTypes.number,\n  noImages: PropTypes.bool,\n  transformResponse: PropTypes.func,\n  transformItem: PropTypes.func,\n  firstItemSubtitleOnImage: PropTypes.bool,\n};\n\nListWithFetch.defaultProps = {\n  label: undefined,\n  params: {},\n  fetchInterval: 1000 * 60 * 10,\n  nItemsDisplay: 3,\n  nItemsTotal: 20,\n  noImages: false,\n  transformResponse: response => response,\n  transformItem: item => item,\n  firstItemSubtitleOnImage: false,\n};\n","import React from 'react';\nimport moment from 'moment';\n\nimport ListWithFetch from '../../base/list/ListWithFetch';\n\nconst GENRE_ID_LIST = ['18'];\n\n/* eslint-disable react/prop-types */\nexport default function UpcomingMusic({ mocked }) {\n  return (\n    <ListWithFetch\n      mocked={mocked}\n      label=\"Album Releases\"\n      url=\"https://rss.itunes.apple.com/api/v1/us/apple-music/coming-soon/all/100/explicit.json\"\n      fetchInterval={1000 * 60 * 30}\n      transformResponse={response => response.data.feed.results.filter(\n        album => album.genres.filter(\n          genre => GENRE_ID_LIST.includes(genre.genreId),\n        ).length,\n      )}\n      firstItemSubtitleOnImage\n      transformItem={album => ({\n        title: `${album.artistName} - ${album.name}`,\n        subtitle: moment(album.releaseDate).calendar(null, {\n          lastDay: '[Yesterday]',\n          sameDay: '[Today]',\n          nextDay: '[Tomorrow]',\n          lastWeek: '[last] dddd',\n          nextWeek: 'dddd',\n          sameElse: 'd MMMM',\n        }),\n        imageUrl: album.artworkUrl100,\n        url: `https://www.google.com/search?q=${album.artistName} ${album.name}`,\n      }\n      )}\n    />\n\n  );\n}\n","import React from 'react';\nimport moment from 'moment';\n\nimport ListWithFetch from '../../base/list/ListWithFetch';\n\nconst GENRE_ID_LIST = ['18'];\n\n/* eslint-disable react/prop-types */\nexport default function NewMusic() {\n  return (\n    <ListWithFetch\n      label=\"New Music\"\n      url=\"https://rss.itunes.apple.com/api/v1/us/itunes-music/new-music/all/100/explicit.json\"\n      fetchInterval={1000 * 60 * 30}\n      transformResponse={response => response.data.feed.results.filter(\n        album => album.genres.filter(\n          genre => GENRE_ID_LIST.includes(genre.genreId),\n        ).length,\n      )}\n      firstItemSubtitleOnImage\n      transformItem={album => ({\n        title: `${album.artistName} - ${album.name}`,\n        subtitle: moment(album.releaseDate).calendar(null, {\n          lastDay: '[Yesterday]',\n          sameDay: '[Today]',\n          nextDay: '[Tomorrow]',\n          lastWeek: '[last] dddd',\n          nextWeek: 'dddd',\n          sameElse: 'd MMMM',\n        }),\n        imageUrl: album.artworkUrl100,\n        url: `https://www.google.com/search?q=${album.artistName} ${album.name}`,\n      }\n      )}\n    />\n\n  );\n}\n","import React from 'react';\nimport moment from 'moment';\n\nimport ListWithFetch from '../../base/list/ListWithFetch';\nimport { API_KEY, API_URL } from '../giant-bomb/config';\n\nconst PLATFORM_IDS = [157, 154];\n\n/* eslint-disable react/prop-types */\nexport default function GameReleases({ mocked }) {\n  return (\n    <ListWithFetch\n      mocked={mocked}\n      label=\"This Week in Games\"\n      url={`${API_URL}games`}\n      params={{\n        api_key: API_KEY,\n        format: 'json',\n        filter: `original_release_date:\n        ${moment().format('YYYY-MM-DD')}|\n        ${moment().add(7, 'day').format('YYYY-MM-DD')}`,\n      }}\n      firstItemSubtitleOnImage\n      fetchInterval={1000 * 60 * 10}\n      transformResponse={response => response.data.results\n        .filter(game => game.platforms && game.platforms\n          .filter(platform => PLATFORM_IDS.includes(platform.id)))\n        .filter(game => game.expected_release_month !== null\n                    && game.expected_release_day !== null\n                    && game.expected_release_year !== null)\n        .map(game => ({\n          ...game,\n          date: moment(\n            [\n              game.expected_release_year,\n              game.expected_release_month - 1,\n              game.expected_release_day,\n            ],\n          ),\n        }))\n        .filter(game => game.date > moment().subtract(1, 'days'))\n        .sort((a, b) => a.date - b.date)\n      }\n      transformItem={item => ({\n        title: item.name,\n        imageUrl: item.image.medium_url,\n        url: item.site_detail_url,\n        subtitle: item.date.calendar(null, {\n          lastDay: '[Yesterday]',\n          sameDay: '[Today]',\n          nextDay: '[Tomorrow]',\n          lastWeek: '[last] dddd',\n          nextWeek: 'dddd',\n          sameElse: 'L',\n        }),\n      })}\n    />\n  );\n}\n","import React from 'react';\nimport moment from 'moment';\nimport xmlParser from 'fast-xml-parser';\n\nimport ListWithFetch from '../../base/list/ListWithFetch';\n\nconst getFirstImageSource = (s) => {\n  const tmp = document.createElement('div');\n  tmp.innerHTML = s;\n  return tmp.querySelector('img').getAttribute('src');\n};\n\nexport default function Recipes() {\n  return (\n    <ListWithFetch\n      label=\"New Recipes\"\n      url=\"https://www.budgetbytes.com/feed/\"\n      fetchInterval={1000 * 60 * 15}\n      transformResponse={response => xmlParser\n        .parse(response.data).rss.channel.item\n        .filter(item => moment(item.pubDate) > moment().subtract(36, 'hour'))}\n      transformItem={item => ({\n        title: item.title,\n        subtitle: moment(item.pubDate).calendar(),\n        url: item.link,\n        imageUrl: getFirstImageSource(item['content:encoded']),\n      })}\n    />\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\n\nexport default function Time({ time }) {\n  return (\n    <span className=\"near-white sans-serif f1 b\">\n      {time.format('HH:mm')}\n      <span className=\"near-white f3 fw4 db\">\n        {time.format('MMMM Do')}\n      </span>\n    </span>\n  );\n}\n\nTime.propTypes = {\n  time: PropTypes.instanceOf(moment).isRequired,\n};\n","import React, { Component } from 'react';\nimport moment from 'moment';\n\nimport TimeView from './TimeView';\n\nexport default class Time extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      time: null,\n      intervalId: null,\n    };\n  }\n\n  componentDidMount() {\n    const intervalId = setInterval(() => {\n      this.updateTime();\n    }, 1000);\n    this.setState({\n      intervalId,\n    });\n    this.updateTime();\n  }\n\n  componentWillUnmount() {\n    const { intervalId } = this.state;\n    if (intervalId) {\n      clearInterval(intervalId);\n    }\n  }\n\n  updateTime = () => {\n    this.setState({\n      time: moment(),\n    });\n  }\n\n  render() {\n    const { time } = this.state;\n\n    if (!time) { return null; }\n    return (<TimeView time={time} />);\n  }\n}\n","export const API_URL = 'https://api.openweathermap.org/data/2.5/';\nexport const API_KEY = 'c51868a10416e26716b878ad7ccacce6';\nexport const FETCH_INTERVAL = 1000 * 60 * 2;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport default function Weather({ weather }) {\n  return (\n    <div className=\"tc\">\n      <span className=\"near-white sans-serif f1 b db\">\n        {Math.round(weather.temperature)}\n        &deg;\n      </span>\n      <span className=\"near-white sans-serif f3 db\">\n        {weather.description}\n      </span>\n    </div>\n  );\n}\n\nWeather.propTypes = {\n  weather: PropTypes.shape({\n    temperature: PropTypes.number.isRequired,\n    description: PropTypes.string.isRequired,\n  }).isRequired,\n};\n","import React, { Component } from 'react';\nimport axios from 'axios';\n\nimport { API_URL, API_KEY, FETCH_INTERVAL } from './config';\nimport WeatherView from './WeatherView';\n\nexport default class Weather extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n      weather: null,\n      intervalId: null,\n    };\n  }\n\n  componentDidMount() {\n    const intervalId = setInterval(() => {\n      this.fetchWeather();\n    }, FETCH_INTERVAL);\n    this.setState({\n      intervalId,\n    });\n    this.fetchWeather();\n  }\n\n  componentWillUnmount() {\n    const { intervalId } = this.state;\n    if (intervalId) {\n      clearInterval(intervalId);\n    }\n  }\n\n  fetchWeather = () => {\n    axios.get(`${API_URL}weather`, {\n      params: {\n        appid: API_KEY,\n        q: 'Nacka,se',\n        units: 'metric',\n      },\n    }).then((response) => {\n      const weather = response.data;\n      this.setState({\n        loading: false,\n        weather: {\n          temperature: weather.main.temp,\n          description: weather.weather[0].description,\n        },\n      });\n    });\n  }\n\n  render() {\n    const { loading, weather } = this.state;\n\n    if (loading) {\n      return <div className=\"bg-near-white w5 h1\" />;\n    }\n\n    if (!weather) {\n      return null;\n    }\n\n    return (<WeatherView weather={weather} />);\n  }\n}\n","export const API_URL = 'http://192.168.86.27/api/lmgn3wPSGyP4ucjGgpoqZMpxVMWCaI0jGkJ1g7ta/';\nexport const FETCH_INTERVAL = 10000;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport default function PhilipsHueLight({ light, onClick }) {\n  const { on } = light.state;\n  const circleColor = on ? 'yellow' : 'moon-gray';\n  return (\n    <div className=\"w-100\">\n      <div>\n        <div className=\"tc\">\n          <button\n            type=\"button\"\n            onClick={() => onClick(light.id, on)}\n            className={\n              `bg-${circleColor} b--${circleColor} h2 w2 br-100 pointer link grow dim`\n            }\n          />\n        </div>\n        <div className=\"tc\">\n          <span className=\"near-white sans-serif f6 fw5 mb1 mt0 truncate\">\n            {light.name}\n          </span>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nPhilipsHueLight.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  light: PropTypes.shape({\n    id: PropTypes.string,\n    name: PropTypes.string,\n    productname: PropTypes.string,\n    state: PropTypes.shape({\n      on: PropTypes.bool,\n    }),\n  }).isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport PhilipsHueLight from './PhilipsHueLight';\n\nexport default function PhilipsHueLightList({\n  lights, onLightClicked,\n  onAllLightsClicked,\n}) {\n  const allLightsOn = lights.filter(light => light.state.on).length === lights.length;\n  const allLightsButtonClasses = allLightsOn ? 'bg-yellow b--yellow'\n    : 'bg-light-gray b--light-gray';\n  return (\n    <div>\n      <div className=\"cf\">\n        <h2 className=\"near-white sans-serif f4 mt2 mb2\"> Light Control </h2>\n        <div className=\"\" />\n        <div className=\"tc pt3 pb3\">\n          <button\n            type=\"button\"\n            onClick={() => onAllLightsClicked(allLightsOn)}\n            className={`${allLightsButtonClasses} h2 w2 v-mid br-100 pointer link grow dim`}\n          />\n          <div>\n            <span className=\"db near-white sans-serif f6 fw5 pt2 truncate\">\n              All lights\n            </span>\n          </div>\n        </div>\n        {\n      lights.map(light => (\n        <div\n          key={light.id}\n          className=\"dib w-100 fl mb3\"\n        >\n          <PhilipsHueLight\n            light={light}\n            onClick={onLightClicked}\n          />\n        </div>\n      ))\n    }\n      </div>\n\n    </div>\n  );\n}\n\nPhilipsHueLightList.propTypes = {\n  lights: PropTypes.arrayOf(PhilipsHueLight.propTypes.light),\n  onLightClicked: PropTypes.func.isRequired,\n  onAllLightsClicked: PropTypes.func.isRequired,\n};\n\nPhilipsHueLightList.defaultProps = {\n  lights: [],\n};\n","import React, { Component } from 'react';\nimport axios from 'axios';\n\nimport { API_URL, FETCH_INTERVAL } from './config';\nimport PhilipsHueLightList from './PhilipsHueLightList';\n\nexport default class PhilipsHue extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      lights: [],\n      intervalId: null,\n    };\n  }\n\n  componentDidMount() {\n    const intervalId = setInterval(() => {\n      this.fetchLights();\n    }, FETCH_INTERVAL);\n    this.setState({\n      intervalId,\n    });\n    this.fetchLights();\n  }\n\n  componentWillUnmount() {\n    const { intervalId } = this.state;\n    clearInterval(intervalId);\n  }\n\n  fetchLights = () => {\n    axios.get(`${API_URL}lights`).then((response) => {\n      if (response !== null) {\n        const { data } = response;\n        const lights = [];\n\n        Object.keys(data).forEach(\n          key => lights.push({\n            ...data[key], id: key,\n          }),\n        );\n        this.setState({ lights });\n      }\n    });\n  }\n\n  onLightClicked = (id, prevState) => {\n    axios.put(`${API_URL}lights/${id}/state`,\n      { on: !prevState }).then(() => {\n      this.fetchLights();\n    });\n  }\n\n  onAllLightsClicked = (prevState) => {\n    const { lights } = this.state;\n    lights.forEach((light) => {\n      axios.put(`${API_URL}lights/${light.id}/state`,\n        { on: !prevState }).then(() => {\n      });\n    });\n  }\n\n  render() {\n    const { lights } = this.state;\n    if (!lights || !lights.length) {\n      return null;\n    }\n    return (\n      <div>\n        <PhilipsHueLightList\n          lights={lights}\n          onLightClicked={this.onLightClicked}\n          onAllLightsClicked={this.onAllLightsClicked}\n        />\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\n\nimport ListWithFetch from '../../base/list/ListWithFetch';\n\n/* eslint-disable react/prop-types */\nexport default function News({ filter, label, mocked }) {\n  return (\n    <ListWithFetch\n      mocked={mocked}\n      label={label}\n      url=\"https://newsapi.org/v2/top-headlines\"\n      fetchInterval={1000 * 60 * 1}\n      params={{\n        [filter.type]: filter.value,\n        apiKey: '8fcc0e50139642efab56a0fcd657cb23',\n      }}\n      transformResponse={response => response.data.articles}\n      transformItem={item => ({\n        imageUrl: item.urlToImage,\n        title: item.title,\n        subtitle: moment(item.publishedAt).fromNow(),\n        url: item.url,\n      })}\n    />\n  );\n}\n\nNews.propTypes = {\n  filter: PropTypes.shape({\n    type: PropTypes.string,\n    value: PropTypes.string,\n  }),\n  label: PropTypes.string,\n};\n\nNews.defaultProps = {\n  label: '',\n  filter: {\n    type: 'country',\n    value: 'se',\n  },\n};\n","import React from 'react';\nimport moment from 'moment';\nimport List from '../../base/list/List';\n\nimport FetchWithInterval from '../../base/list/FetchWithInterval';\n\nconst LABEL = 'Nya Öler';\nexport default function UpcomingBeer() {\n  return (\n    <FetchWithInterval\n      headers={{ 'Ocp-Apim-Subscription-Key': 'ed6bfcdbf6074559bd67365384159e63' }}\n      url=\"https://api-extern.systembolaget.se/product/v1/product/search\"\n      params={{\n        SortBy: 'SellStartDate',\n        SubCategory: 'Öl',\n        SellStartDateFrom: moment().subtract(5, 'day').format('YYYY-MM-DD'),\n        SellStartDateTo: moment().add(14, 'day').format('YYYY-MM-DD'),\n      }}\n    >\n      {(response, loading, error) => {\n        if (loading) {\n          return (\n            <List\n              label={LABEL}\n              limitTo={1}\n              loading\n              fetchInterval={1000 * 60 * 5}\n            />\n          );\n        }\n        if (error) {\n          return null;\n        }\n        if (response) {\n          const beers = response.data.Hits;\n          const beersInStore = beers.filter(beer => beer.IsInStoreSearchAssortment\n            .includes('0237'));\n          if (!beersInStore || !beersInStore.length) {\n            return null;\n          }\n          return (\n            <div>\n              <List\n                label={LABEL}\n                noImages\n                limitTo={6}\n                items={beersInStore.map(beer => (\n                  {\n                    title: `${beer.ProductNameBold} ${beer.ProductNameThin || ''}`,\n                    subtitle: moment(beer.SellStartDate).calendar(null, {\n                      lastDay: '[Yesterday]',\n                      sameDay: '[Today]',\n                      nextDay: '[Tomorrow]',\n                      lastWeek: '[last] dddd',\n                      nextWeek: 'dddd',\n                      sameElse: 'L',\n                    }),\n                    url: `https://www.systembolaget.se/dryck/ol/${beer.ProductNameBold\n                      .trim()\n                      .replace(/\\s+/g, '-')\n                      .replace(/\\./g, '')\n                      .replace(/\\u00e4/g, 'a')\n                      .replace(/\\u00f6/g, 'o')\n                      .replace(/\\\\|\\//g, '')\n                      .toLowerCase()}-${beer.ProductNumber}`,\n                    imageUrl: 'https://www.systembolaget.se/content/assets/images/products/product-placeholder.png',\n                  }\n                ))}\n              />\n            </div>\n          );\n        }\n        return null;\n      }}\n\n    </FetchWithInterval>\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\n\nimport FetchWithInterval from '../../base/list/FetchWithInterval';\n\nconst LABEL = 'Stocks';\nconst API_KEY = 'GIUYQBXKZDY2VNT7';\n\nexport default function Stocks({ stocks, mocked }) {\n  return (\n    stocks.map((stock, index) => (\n      <FetchWithInterval\n        mocked={mocked ? mocked[index] : null}\n        url=\"https://www.alphavantage.co/query\"\n        params={{\n          outputsize: 'compact',\n          apikey: API_KEY,\n          symbol: stock.symbol,\n          function: 'TIME_SERIES_DAILY',\n        }}\n        fetchInterval={1000 * 60 * 5}\n      >\n        {(response, loading, error) => {\n          if (error || loading) {\n            return null;\n          }\n\n          const data = response.data['Time Series (Daily)'];\n          if (!data) {\n            return null;\n          }\n\n          const dataWithDates = [];\n          Object.keys(data).forEach((key) => {\n            dataWithDates.push({ ...data[key], date: moment(key) });\n          });\n\n          const sortedDataWithDates = dataWithDates.sort((a, b) => a.date + b.date);\n\n          const latestValue = sortedDataWithDates[0];\n          const nextToLatestValue = sortedDataWithDates[1];\n          if (!latestValue || !nextToLatestValue) {\n            return null;\n          }\n\n          const latestClose = Math.round(latestValue['4. close'] * 100) / 100;\n          const nextToLatestClose = Math.round(nextToLatestValue['4. close'] * 100) / 100;\n          const latestCloseRounded = latestClose.toFixed(2);\n          const isValueIncreasedSinceYesterday = latestClose > nextToLatestClose;\n          const percentageDiffSinceYesterday = (((latestClose / nextToLatestClose) - 1) * 100)\n            .toFixed(1);\n          const percentageDiffSinceAcquired = (\n            ((latestClose / stock.acquiredAt) - 1) * 100).toFixed(1);\n\n          if (index === 0) {\n            return (\n              <div>\n                <h2 className=\"near-white sans-serif f5 mb2\">\n                  {LABEL}\n                </h2>\n                <h2 className=\"sans-serif f7 light-silver fw5 mb3\">\n                  {`Updated ${moment().format('HH:mm')}`}\n                </h2>\n                <div className=\"tc mb4\">\n                  <div className=\"sans-serif light-silver tc f4 mt4\">\n                    {stock.symbol}\n                  </div>\n                  <div className=\"f2 near-white sans-serif mv2 b\">\n                    {`${latestCloseRounded} kr`}\n                  </div>\n                  <div className={`sans-serif f4 dib ${isValueIncreasedSinceYesterday ? 'green' : 'red'}`}>\n                    {`${percentageDiffSinceYesterday}%`}\n                  </div>\n                  <span className=\"white sans-serif f7 lh-copy pl2 mt2\">\n                    {`(${percentageDiffSinceAcquired}%)`}\n                  </span>\n                )\n                </div>\n              </div>\n            );\n          }\n          return (\n            <div className=\"f mv2\">\n              <div className=\"f5 mt2 mb1\">\n                <span className=\"sans-serif light-silver\">\n                  {stock.symbol}\n                </span>\n                <span className=\"near-white sans-serif b fr\">\n                  {`${latestCloseRounded} kr`}\n                </span>\n              </div>\n              <div className=\"tr f6\">\n                <span className={`mr2 sans-serif ${isValueIncreasedSinceYesterday ? 'green' : 'red'}`}>\n                  {`${percentageDiffSinceYesterday}%`}\n                </span>\n                <span className=\"white sans-serif f7\">\n                  {`(${percentageDiffSinceAcquired}%)`}\n                </span>\n              </div>\n                )\n            </div>\n          );\n        }}\n      </FetchWithInterval>\n    ))\n  );\n}\n\nStocks.propTypes = {\n  stocks: PropTypes.arrayOf(\n    PropTypes.shape({\n      symbol: PropTypes.string,\n      boughtAt: PropTypes.number,\n    }),\n  ),\n};\n\nStocks.defaultProps = {\n  stocks: [],\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { getSunrise, getSunset } from 'sunrise-sunset-js';\nimport moment from 'moment';\n\nexport default function SunriseSunset({ lat, lng }) {\n  const sunrise = getSunrise(lat, lng);\n  const sunset = getSunset(lat, lng);\n  return (\n    <div className=\"tc\">\n      <span className=\"light-silver sans-serif f4 db mt2 mb1\">\n      Sunrise\n      </span>\n      <span className=\"white sans-serif f3 db b\">\n        {moment(sunrise).format('HH:mm')}\n      </span>\n      <span className=\"light-silver sans-serif f4 db mt2 mb1\">\n      Sunset\n      </span>\n      <span className=\"white sans-serif f3 db b\">\n        {moment(sunset).format('HH:mm')}\n      </span>\n    </div>\n  );\n}\nSunriseSunset.propTypes = {\n  lat: PropTypes.number.isRequired,\n  lng: PropTypes.number.isRequired,\n};\n","import React from 'react';\nimport GBLatestVideos from './components/dashboard/giant-bomb/LatestVideos/LatestVideos';\nimport UpcomingMusic from './components/dashboard/upcoming-music/UpcomingMusic';\nimport NewMusic from './components/dashboard/upcoming-music/NewMusic';\nimport GameReleases from './components/dashboard/game-releases/GameReleases';\nimport Recipes from './components/dashboard/recipes/Recipes';\nimport RecipesBA from './components/dashboard/recipes/RecipesBA';\nimport Standings from './components/dashboard/allsvenskan/Standings';\nimport StandingsBandy from './components/dashboard/elitserien-bandy/Standings';\nimport Time from './components/dashboard/time/Time';\nimport Weather from './components/dashboard/weather/Weather';\nimport PhilipsHue from './components/dashboard/philips-hue/PhilipsHue';\nimport News from './components/dashboard/news/News';\nimport GBUpcoming from './components/dashboard/giant-bomb/UpcomingVideos/UpcomingVideos';\nimport UpcomingBeer from './components/dashboard/systembolaget/UpcomingBeer';\nimport Stocks from './components/dashboard/stocks/Stocks';\nimport SunriseSunset from './components/dashboard/sunrise-sunset/SunriseSunset';\nimport Podcasts from './components/dashboard/podcasts/Podcasts';\nimport XboxNews from './components/dashboard/xbox-wire/News';\n\nconst components = [\n  <GBUpcoming />,\n  <GameReleases />,\n  <UpcomingMusic />,\n  <NewMusic />,\n  <News\n    label=\"News\"\n    filter={{ type: 'sources', value: 'reuters' }}\n  />,\n  <XboxNews />,\n  <GBLatestVideos />,\n  <Stocks\n    stocks={[{\n      symbol: 'STO:IMMU',\n      acquiredAt: 12.87,\n    }, {\n      symbol: 'STO:SOLT',\n      acquiredAt: 20.50,\n    }, {\n      symbol: 'STO:EOLU-B',\n      acquiredAt: 123.00,\n    }]}\n  />,\n  <Recipes />,\n  <RecipesBA />,\n  <Standings />,\n  <StandingsBandy />,\n  <UpcomingBeer />,\n  <Podcasts />,\n];\n\nconst componentWidth = 'w-20';\nconst componentPadding = 'ph2';\n\nfunction App() {\n  return (\n    <div className=\"bg-near-black mh3\">\n\n      <div className=\"cf fl w-15 pt5\">\n        <div className=\"tc\">\n          <Time />\n          <div className=\"mv4\">\n            <SunriseSunset lat={59.305377} lng={18.145041} />\n          </div>\n          <Weather />\n        </div>\n        <div className=\"pt4 tc\">\n          <PhilipsHue />\n        </div>\n      </div>\n\n      <div className=\"fl w-85 cf\">\n        {\n        components.map(component => (\n          <div className={`${componentWidth} ${componentPadding} fl min-h6 `}>\n            {component}\n          </div>\n        ))\n      }\n      </div>\n    </div>\n  );\n}\nexport default App;\n","import React from 'react';\nimport moment from 'moment';\n\nimport ListWithFetch from '../../../base/list/ListWithFetch';\n\n/* eslint-disable react/prop-types */\nexport default function GBUpcoming({ mocked }) {\n  return (\n    <ListWithFetch\n      mocked={mocked}\n      label=\"Giant Bomb Upcoming\"\n      url=\"https://www.giantbomb.com/upcoming_json\"\n      fetchInterval={1000 * 60 * 5}\n      firstItemSubtitleOnImage\n      transformResponse={response => (response.data.liveNow\n        ? [response.data.liveNow, ...response.data.upcoming]\n        : response.data.upcoming)}\n      transformItem={item => (\n        {\n          title: item.title,\n          subtitle: item.date ? moment(item.date)\n            .add(9, 'hours')\n            .calendar() : (\n              <>\n                <span className=\"live-pulse\" />\n                <span className=\"ml2\">Live</span>\n              </>\n          ),\n          imageUrl: `https://${item.image}`,\n          url: 'https://www.giantbomb.com',\n        }\n      )}\n    />\n  );\n}\n","import React from 'react';\nimport moment from 'moment';\nimport xmlParser from 'fast-xml-parser';\n\nimport ListWithFetch from '../../base/list/ListWithFetch';\n\nexport default function News() {\n  return (\n    <ListWithFetch\n      label=\"New on Game Pass\"\n      url=\"https://news.xbox.com/en-us/feed/\"\n      fetchInterval={1000 * 60 * 15}\n      transformResponse={response => xmlParser.parse(response.data,\n        { ignoreAttributes: false }).rss.channel.item\n        .filter(item => item.title.includes('Game Pass'))}\n      transformItem={item => ({\n        title: item.title,\n        subtitle: moment(item.pubDate).calendar(),\n        url: item.link,\n        imageUrl: item['media:thumbnail']['@_url'],\n      })}\n    />\n  );\n}\n","import React from 'react';\nimport moment from 'moment';\n\nimport { API_URL, API_KEY } from '../config';\nimport ListWithFetch from '../../../base/list/ListWithFetch';\n\n/* eslint-disable react/prop-types */\nexport default function GBLatestVideos({ mocked }) {\n  return (\n    <ListWithFetch\n      mocked={mocked}\n      label=\"Latest Giant Bomb Videos\"\n      url={`${API_URL}videos`}\n      params={{\n        field_list: 'name,id,image,publish_date,site_detail_url',\n        api_key: API_KEY,\n        format: 'json',\n      }}\n      fetchInterval={1000 * 60 * 10}\n      transformResponse={response => response.data.results}\n      transformItem={item => ({\n        title: item.name,\n        subtitle: moment(item.publish_date)\n          .add(9, 'hours').fromNow(),\n        url: item.site_detail_url,\n        imageUrl: item.image.medium_url,\n      })}\n    />\n  );\n}\n","import React from 'react';\nimport moment from 'moment';\nimport xmlParser from 'fast-xml-parser';\n\nimport ListWithFetch from '../../base/list/ListWithFetch';\n\n/* const getFirstImageSource = (s) => {\n  const tmp = document.createElement('div');\n  tmp.innerHTML = s;\n  return tmp.querySelector('img').getAttribute('src');\n}; */\n\nexport default function Recipes() {\n  return (\n    <ListWithFetch\n      label=\"New Recipes\"\n      url=\"https://www.bonappetit.com/feed/latest-recipes/rss\"\n      fetchInterval={1000 * 60 * 15}\n      transformResponse={response => xmlParser\n        .parse(response.data, { ignoreAttributes: false }).rss.channel.item\n        .filter(item => moment(item.pubDate) > moment().subtract(36, 'hour'))}\n      transformItem={item => ({\n        title: item.title,\n        subtitle: moment(item.pubDate).calendar(),\n        url: item.link,\n        imageUrl: item['media:thumbnail']['@_url'],\n      })}\n    />\n  );\n}\n","import React from 'react';\nimport moment from 'moment';\n\nimport ListWithFetch from '../../base/list/ListWithFetch';\n\n/* eslint-disable react/prop-types */\nexport default function Standings({ mocked }) {\n  const currentMonth = moment().month();\n  const isSeason = currentMonth >= 2 && currentMonth <= 10;\n  if (!isSeason) {\n    return null;\n  }\n  return (\n    <ListWithFetch\n      mocked={mocked}\n      label=\"Allsvenskans tabell\"\n      url=\"https://secret-thicket-04067.herokuapp.com/as\"\n      fetchInterval={1000 * 60 * 10}\n      nItemsDisplay={7}\n      noImages\n      transformResponse={response => response.data.result.item}\n      transformItem={item => ({\n        title: `${item.position}. ${item.team}`,\n        subtitle: `${item.points} poäng - ${item.round} spelade`,\n      })}\n    />\n  );\n}\n","import React from 'react';\nimport moment from 'moment';\n\nimport ListWithFetch from '../../base/list/ListWithFetch';\n\n/* eslint-disable react/prop-types */\nexport default function Standings() {\n  const currentMonth = moment().month();\n  const isSeason = currentMonth >= 9 || currentMonth <= 4;\n  if (!isSeason) {\n    return null;\n  }\n  return (\n    <ListWithFetch\n      label=\"Bandy Elitserien\"\n      url=\"https://secret-thicket-04067.herokuapp.com/es\"\n      fetchInterval={1000 * 60 * 10}\n      nItemsDisplay={7}\n      noImages\n      transformResponse={response => response.data.result.item}\n      transformItem={item => ({\n        title: `${item.position}. ${item.team}`,\n        subtitle: `${item.points} poäng - ${item.round} spelade`,\n      })}\n    />\n  );\n}\n","import React from 'react';\nimport moment from 'moment';\nimport xmlParser from 'fast-xml-parser';\n\nimport ListWithFetch from '../../base/list/ListWithFetch';\n\nexport default function Podcasts() {\n  return (\n    <ListWithFetch\n      label=\"New Podcasts\"\n      url=\"https://feed.rssunify.com/5da1b118c13c4/rss.xml\"\n      fetchInterval={1000 * 60 * 15}\n      transformResponse={response => xmlParser.parse(response.data,\n        { ignoreAttributes: false }).rss.channel.item\n        .filter(item => moment(item.pubDate) > moment().subtract(24, 'hours'))}\n      transformItem={item => ({\n        title: item.title,\n        subtitle: moment(item.pubDate).calendar(),\n        url: item.link,\n        imageUrl: item['itunes:image']['@_href'],\n      })}\n    />\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}