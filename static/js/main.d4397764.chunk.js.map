{"version":3,"sources":["components/dashboard/giant-bomb/config.js","components/base/list/item/components/Title.jsx","components/base/list/item/components/Subtitle.jsx","components/base/list/item/components/Image.jsx","components/base/list/item/Item.jsx","components/base/list/dialog/Dialog.jsx","components/base/list/List.jsx","components/base/list/FetchWithInterval.jsx","components/base/list/ListWithFetch.jsx","components/dashboard/giant-bomb/LatestVideos/LatestVideos.jsx","components/dashboard/game-releases/GameReleases.jsx","components/dashboard/recipes/Recipes.jsx","components/dashboard/recipes/RecipesBA.jsx","components/dashboard/time/TimeView.jsx","components/dashboard/time/Time.jsx","components/dashboard/weather/config.js","components/dashboard/weather/WeatherView.jsx","components/dashboard/weather/Weather.jsx","components/dashboard/giant-bomb/UpcomingVideos/UpcomingVideos.jsx","components/dashboard/sunrise-sunset/SunriseSunset.jsx","components/dashboard/xbox-wire/News.jsx","App.js","serviceWorker.js","index.js"],"names":["API_KEY","API_URL","Title","_ref","title","loading","link","large","react_default","a","createElement","className","textClasses","concat","href","target","rel","Subtitle","subtitle","Image","url","alt","show","textOverlay","img","src","Item","item","showImage","subtitleOverImage","largeTitle","imageUrl","defaultProps","ListDialog","list","open","onClose","noImages","limitTo","Dialog_default","aria-labelledby","List","Object","assign","items","label","firstItemSubtitleOnImage","_useState","useState","_useState2","slicedToArray","dialogOpen","setDialogOpen","toConsumableArray","Array","keys","map","i","key","moment","format","slice","length","Button_default","size","color","onClick","FetchWithInterval","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","fetch","_this$props","params","headers","axios","get","then","response","setState","error","state","intervalId","_this2","_this$props2","fetchInterval","mocked","setInterval","clearInterval","_this$state","_this$props3","children","Component","ListWithFetch","nItemsDisplay","nItemsTotal","transformResponse","transformItem","mockedItem","FetchWithInterval_FetchWithInterval","data","includes","GBLatestVideos","field_list","api_key","results","name","publish_date","add","fromNow","site_detail_url","image","medium_url","undefined","PLATFORM_IDS","GameReleases","filter","game","platforms","platform","id","expected_release_month","expected_release_day","expected_release_year","objectSpread","date","subtract","sort","b","calendar","lastDay","sameDay","nextDay","lastWeek","nextWeek","sameElse","getFirstImageSource","s","tmp","document","innerHTML","querySelector","getAttribute","Recipes","xmlParser","parse","rss","channel","pubDate","ignoreAttributes","Time","time","updateTime","TimeView_Time","Weather","weather","Math","round","temperature","description","fetchWeather","appid","q","units","main","temp","WeatherView_Weather","GBUpcoming","liveNow","upcoming","Fragment","SunriseSunset","lat","lng","sunrise","getSunrise","sunset","getSunset","News","components","Time_Time","Weather_Weather","News_News","RecipesBA_Recipes","componentWidth","componentPadding","App","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d4397764.chunk.js","sourcesContent":["export const API_KEY = 'd6570a6b091038395145cafcf7d50ae3bef07e5a';\nexport const API_URL = 'https://www.giantbomb.com/api/';\nexport const GAME_URL = 'https://www.giantbomb.com/game/';\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n\nexport default function Title({\n  title, loading, link, large,\n}) {\n  if (loading) {\n    return <div className=\"bg-dark-gray h1 w5 mv2\" />;\n  }\n\n  const textClasses = `${large ? 'f6 b' : 'f6 fw5'} db sans-serif mv2 near-white`;\n  if (link) {\n    return (\n      <a\n        href={link}\n        className={`${textClasses} link truncate-two-lines`}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        {title}\n      </a>\n    );\n  }\n\n  return (\n    <span className={textClasses}>\n      {title}\n    </span>\n  );\n}\n\nTitle.propTypes = {\n  title: PropTypes.string,\n  loading: PropTypes.bool,\n  link: PropTypes.string,\n  large: PropTypes.bool,\n};\n\nTitle.defaultProps = {\n  title: '',\n  loading: false,\n  link: null,\n  large: false,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n\nexport default function Subtitle({ subtitle, loading }) {\n  if (loading) {\n    return <div className=\"bg-dark-gray h1 w4 mv2\" />;\n  }\n  return (\n    <span className=\"db sans-serif f7 light-silver truncate\">\n      {subtitle}\n    </span>\n  );\n}\n\nSubtitle.propTypes = {\n  subtitle: PropTypes.string,\n  loading: PropTypes.bool,\n};\n\nSubtitle.defaultProps = {\n  loading: false,\n  subtitle: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport default function Image({\n  url, alt, loading, show, textOverlay,\n}) {\n  if (!show) {\n    return null;\n  }\n\n  if (loading) {\n    return <div className=\"h-12-rem bg-dark-gray br2\" />;\n  }\n\n  const img = (\n    <img\n      className=\"h-12-rem contain of-c w-100 br2\"\n      src={url}\n      alt={alt}\n    />\n  );\n\n  if (textOverlay) {\n    return (\n      <div className=\"relative\">\n        {img}\n        <span className=\"darken-bottom db w-100 absolute bottom-0 right-0 tr pv2 ph3 sans-serif white f3 b\">\n          {textOverlay}\n        </span>\n      </div>\n    );\n  }\n\n  return img;\n}\n\nImage.propTypes = {\n  url: PropTypes.string,\n  alt: PropTypes.string.isRequired,\n  loading: PropTypes.bool,\n  show: PropTypes.bool,\n  textOverlay: PropTypes.string,\n};\n\nImage.defaultProps = {\n  url: null,\n  loading: false,\n  show: true,\n  textOverlay: null,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Title from './components/Title';\nimport Subtitle from './components/Subtitle';\nimport Image from './components/Image';\n\nexport default function Item({\n  item, showImage, loading, subtitleOverImage, largeTitle,\n}) {\n  return (\n    <div>\n      <Image\n        textOverlay={subtitleOverImage ? item.subtitle : null}\n        url={item.imageUrl}\n        alt={item.title}\n        show={showImage}\n        loading={loading}\n      />\n      <Title\n        link={item.url}\n        title={item.title}\n        loading={loading}\n        large={largeTitle}\n      />\n      {\n        !subtitleOverImage\n        && (\n        <Subtitle\n          subtitle={item.subtitle}\n          loading={loading}\n        />\n        )\n      }\n    </div>\n  );\n}\n\nItem.propTypes = {\n  item: PropTypes.shape({\n    url: PropTypes.string,\n    imageUrl: PropTypes.string,\n    title: PropTypes.string,\n    subtitle: PropTypes.string,\n  }),\n  showImage: PropTypes.bool.isRequired,\n  loading: PropTypes.bool,\n  subtitleOverImage: PropTypes.bool,\n  largeTitle: PropTypes.bool,\n};\n\nItem.defaultProps = {\n  loading: false,\n  item: {},\n  subtitleOverImage: false,\n  largeTitle: false,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Dialog from '@material-ui/core/Dialog';\n\nimport List from '../List';\n\nexport default function ListDialog({\n  list, open, onClose, noImages, limitTo,\n}) {\n  return (\n    <Dialog\n      aria-labelledby=\"show-all-list-items\"\n      open={open}\n      onClose={onClose}\n    >\n      <div className=\"ph4 pv2 bg-near-black min-w6\">\n        <List\n          limitTo={limitTo}\n          noImages={noImages}\n          {...list}\n        />\n      </div>\n    </Dialog>\n  );\n}\n\nListDialog.propTypes = {\n  list: PropTypes.shape(List.propTypes).isRequired,\n  open: PropTypes.bool.isRequired,\n  onClose: PropTypes.func.isRequired,\n  noImages: PropTypes.bool,\n  limitTo: PropTypes.number,\n};\n\nListDialog.defaultProps = {\n  noImages: false,\n  limitTo: 20,\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport moment from 'moment';\n\nimport Item from './item/Item';\n/* eslint-disable import/no-cycle */\nimport Dialog from './dialog/Dialog';\n\nexport default function List({\n  items, loading, limitTo, label, noImages, firstItemSubtitleOnImage,\n}) {\n  const [dialogOpen, setDialogOpen] = useState(false);\n  function dialogOpenClicked() {\n    setDialogOpen(true);\n  }\n  function dialogCloseClicked() {\n    setDialogOpen(false);\n  }\n\n  if (loading) {\n    return (\n      <div>\n        <h2 className=\"near-white sans-serif f5 mb2\">\n          {label}\n        </h2>\n        {[...Array(limitTo).keys()]\n          .map(i => (\n            <div className=\"mb4\" key={i}>\n              <Item\n                loading={loading}\n                showImage={i < 1 && !noImages}\n              />\n            </div>\n          ))}\n      </div>\n    );\n  }\n\n  return (\n    <div>\n      <h2 className=\"near-white sans-serif f5 mb2\">\n        {label}\n      </h2>\n      <h2 className=\"sans-serif f7 light-silver fw5 mb3\">\n        {`Updated ${moment().format('HH:mm')}`}\n      </h2>\n      {\n        items\n          .slice(0, limitTo)\n          .map((item, i) => (\n            <div className=\"mb3\" key={item.title}>\n              <Item\n                key={item.title}\n                item={item}\n                showImage={i < 1 && !noImages}\n                subtitleOverImage={i < 1 && firstItemSubtitleOnImage}\n                largeTitle={i < 1}\n              />\n            </div>\n          ))\n      }\n      {\n        items.length > limitTo\n        && (\n          <div className=\"tc\">\n            <Button\n              size=\"small\"\n              color=\"primary\"\n              onClick={dialogOpenClicked}\n            >\n          Show more...\n            </Button>\n          </div>\n        )\n    }\n      <Dialog\n        list={{\n          items, loading, label,\n        }}\n        noImages={noImages}\n        open={dialogOpen}\n        onClose={dialogCloseClicked}\n      />\n    </div>\n  );\n}\n\nList.propTypes = {\n  items: PropTypes.arrayOf(Item.propTypes.item),\n  loading: PropTypes.bool,\n  limitTo: PropTypes.number,\n  label: PropTypes.string,\n  noImages: PropTypes.bool,\n  firstItemSubtitleOnImage: PropTypes.bool,\n};\n\nList.defaultProps = {\n  loading: false,\n  items: [],\n  limitTo: 3,\n  label: '',\n  noImages: false,\n  firstItemSubtitleOnImage: false,\n};\n","import { Component } from 'react';\nimport axios from 'axios';\nimport PropTypes from 'prop-types';\n\nexport default class FetchWithInterval extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n      response: [],\n      intervalId: null,\n      error: false,\n    };\n  }\n\n  componentDidMount() {\n    const { fetchInterval, mocked } = this.props;\n    if (mocked) {\n      return;\n    }\n\n    const intervalId = setInterval(() => {\n      this.fetch();\n    }, fetchInterval);\n    this.setState({\n      intervalId,\n    });\n    this.fetch();\n  }\n\n  componentWillUnmount() {\n    const { intervalId } = this.state;\n    clearInterval(intervalId);\n  }\n\n  fetch = () => {\n    const {\n      url, params, headers,\n    } = this.props;\n    axios.get(url, {\n      params, headers: headers || {},\n    }).then((response) => {\n      this.setState({\n        response,\n        loading: false,\n        error: false,\n      });\n    }, (error) => {\n      this.setState({ loading: false, error });\n    });\n  }\n\n  render() {\n    const { loading, response, error } = this.state;\n    const { children, mocked } = this.props;\n    if (mocked) {\n      return children(mocked, false, null);\n    }\n    return children(response, loading, error);\n  }\n}\n\nFetchWithInterval.propTypes = {\n  fetchInterval: PropTypes.number,\n  url: PropTypes.string.isRequired,\n  children: PropTypes.func.isRequired,\n  params: PropTypes.objectOf(PropTypes.string),\n  headers: PropTypes.objectOf(PropTypes.string),\n};\n\nFetchWithInterval.defaultProps = {\n  fetchInterval: 60000,\n  params: null,\n  headers: null,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport List from './List';\nimport FetchWithInterval from './FetchWithInterval';\n\nexport default function ListWithFetch({\n  url, label, params, fetchInterval, nItemsDisplay,\n  noImages, nItemsTotal, transformResponse, transformItem, mocked,\n  firstItemSubtitleOnImage,\n}) {\n  if (mocked) {\n    return (\n      <List\n        label={label}\n        noImages={noImages}\n        limitTo={nItemsDisplay}\n        firstItemSubtitleOnImage={firstItemSubtitleOnImage}\n        items={transformResponse(mocked)\n          .map(mockedItem => transformItem(mockedItem))\n          .slice(0, nItemsTotal)}\n      />\n    );\n  }\n  return (\n    <FetchWithInterval\n      url={url}\n      params={params}\n      fetchInterval={fetchInterval}\n    >\n      {(response, loading, error) => {\n        if (loading) {\n          return (\n            <List\n              label={label}\n              noImages={noImages}\n              loading\n            />\n          );\n        }\n\n        if (error) {\n          return null;\n        }\n\n        if (response) {\n          if (typeof response.data === 'string'\n          && (response.data.includes('<!DOCTYPE HTML') || response.data.includes('One or more feeds were not valid RSS'))) {\n            return null;\n          }\n          const items = transformResponse(response);\n          if (!items || !items.length) {\n            return null;\n          }\n          return (\n            <List\n              label={label}\n              noImages={noImages}\n              limitTo={nItemsDisplay}\n              firstItemSubtitleOnImage={firstItemSubtitleOnImage}\n              items={items\n                .map(item => transformItem(item))\n                .slice(0, nItemsTotal)}\n            />\n          );\n        }\n\n        return null;\n      }}\n    </FetchWithInterval>\n  );\n}\n\nListWithFetch.propTypes = {\n  url: PropTypes.string.isRequired,\n  params: PropTypes.string,\n  label: PropTypes.string,\n  fetchInterval: PropTypes.number,\n  nItemsDisplay: PropTypes.number,\n  nItemsTotal: PropTypes.number,\n  noImages: PropTypes.bool,\n  transformResponse: PropTypes.func,\n  transformItem: PropTypes.func,\n  firstItemSubtitleOnImage: PropTypes.bool,\n};\n\nListWithFetch.defaultProps = {\n  label: undefined,\n  params: {},\n  fetchInterval: 1000 * 60 * 10,\n  nItemsDisplay: 3,\n  nItemsTotal: 20,\n  noImages: false,\n  transformResponse: response => response,\n  transformItem: item => item,\n  firstItemSubtitleOnImage: false,\n};\n","import React from 'react';\nimport moment from 'moment';\n\nimport { API_URL, API_KEY } from '../config';\nimport ListWithFetch from '../../../base/list/ListWithFetch';\n\n/* eslint-disable react/prop-types */\nexport default function GBLatestVideos({ mocked }) {\n  return (\n    <ListWithFetch\n      mocked={mocked}\n      label=\"Latest Giant Bomb Videos\"\n      url={`${API_URL}videos`}\n      params={{\n        field_list: 'name,id,image,publish_date,site_detail_url',\n        api_key: API_KEY,\n        format: 'json',\n      }}\n      nItemsTotal={10}\n      fetchInterval={1000 * 60 * 10}\n      transformResponse={response => response.data.results}\n      transformItem={item => ({\n        title: item.name,\n        subtitle: moment(item.publish_date)\n          .add(9, 'hours').fromNow(),\n        url: item.site_detail_url,\n        imageUrl: item.image.medium_url,\n      })}\n    />\n  );\n}\n","import React from 'react';\nimport moment from 'moment';\n\nimport ListWithFetch from '../../base/list/ListWithFetch';\nimport { API_KEY, API_URL } from '../giant-bomb/config';\n\nconst PLATFORM_IDS = [157, 154];\n\n/* eslint-disable react/prop-types */\nexport default function GameReleases({ mocked }) {\n  return (\n    <ListWithFetch\n      mocked={mocked}\n      label=\"Game Releases\"\n      url={`${API_URL}games`}\n      params={{\n        api_key: API_KEY,\n        format: 'json',\n        filter: `original_release_date:\n        ${moment().format('YYYY-MM-DD')}|\n        ${moment()\n          .add(7, 'day')\n          .format('YYYY-MM-DD')}`,\n      }}\n      nItemsDisplay={3}\n      nItemsTotal={12}\n      fetchInterval={1000 * 60 * 10}\n      transformResponse={response => response.data.results\n        .filter(\n          game => game.platforms\n              && game.platforms.filter(platform => PLATFORM_IDS.includes(platform.id)),\n        )\n        .filter(\n          game => game.expected_release_month !== null\n              && game.expected_release_day !== null\n              && game.expected_release_year !== null,\n        )\n        .map(game => ({\n          ...game,\n          date: moment([\n            game.expected_release_year,\n            game.expected_release_month - 1,\n            game.expected_release_day,\n          ]),\n        }))\n        .filter(game => game.date > moment().subtract(1, 'days'))\n        .sort((a, b) => a.date - b.date)\n      }\n      transformItem={item => ({\n        title: item.name,\n        imageUrl: item.image.medium_url,\n        url: item.site_detail_url,\n        subtitle: item.date.calendar(null, {\n          lastDay: '[Yesterday]',\n          sameDay: '[Today]',\n          nextDay: '[Tomorrow]',\n          lastWeek: '[last] dddd',\n          nextWeek: 'dddd',\n          sameElse: 'L',\n        }),\n      })}\n    />\n  );\n}\n","import React from 'react';\nimport moment from 'moment';\nimport xmlParser from 'fast-xml-parser';\n\nimport ListWithFetch from '../../base/list/ListWithFetch';\n\nconst getFirstImageSource = (s) => {\n  const tmp = document.createElement('div');\n  tmp.innerHTML = s;\n  return tmp.querySelector('img').getAttribute('src');\n};\n\nexport default function Recipes() {\n  return (\n    <ListWithFetch\n      label=\"New Recipes\"\n      url=\"https://www.budgetbytes.com/feed/\"\n      fetchInterval={1000 * 60 * 15}\n      transformResponse={response => xmlParser\n        .parse(response.data).rss.channel.item\n        }\n      transformItem={item => ({\n        title: item.title,\n        subtitle: moment(item.pubDate).calendar(),\n        url: item.link,\n        imageUrl: getFirstImageSource(item['content:encoded']),\n      })}\n    />\n  );\n}\n","import React from 'react';\nimport moment from 'moment';\nimport xmlParser from 'fast-xml-parser';\n\nimport ListWithFetch from '../../base/list/ListWithFetch';\n\n/* const getFirstImageSource = (s) => {\n  const tmp = document.createElement('div');\n  tmp.innerHTML = s;\n  return tmp.querySelector('img').getAttribute('src');\n}; */\n\nexport default function Recipes() {\n  return (\n    <ListWithFetch\n      label=\"New Recipes\"\n      url=\"https://www.bonappetit.com/feed/latest-recipes/rss\"\n      fetchInterval={1000 * 60 * 15}\n      transformResponse={response => xmlParser\n        .parse(response.data, { ignoreAttributes: false }).rss.channel.item\n        }\n      transformItem={item => ({\n        title: item.title,\n        subtitle: moment(item.pubDate).calendar(),\n        url: item.link,\n        imageUrl: item['media:thumbnail']['@_url'],\n      })}\n    />\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\n\nexport default function Time({ time }) {\n  return (\n    <span className=\"near-white sans-serif f1 b\">\n      {time.format('HH:mm')}\n      <span className=\"near-white f3 fw4 db\">\n        {time.format('MMMM Do')}\n      </span>\n    </span>\n  );\n}\n\nTime.propTypes = {\n  time: PropTypes.instanceOf(moment).isRequired,\n};\n","import React, { Component } from 'react';\nimport moment from 'moment';\n\nimport TimeView from './TimeView';\n\nexport default class Time extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      time: null,\n      intervalId: null,\n    };\n  }\n\n  componentDidMount() {\n    const intervalId = setInterval(() => {\n      this.updateTime();\n    }, 1000);\n    this.setState({\n      intervalId,\n    });\n    this.updateTime();\n  }\n\n  componentWillUnmount() {\n    const { intervalId } = this.state;\n    if (intervalId) {\n      clearInterval(intervalId);\n    }\n  }\n\n  updateTime = () => {\n    this.setState({\n      time: moment(),\n    });\n  }\n\n  render() {\n    const { time } = this.state;\n\n    if (!time) { return null; }\n    return (<TimeView time={time} />);\n  }\n}\n","export const API_URL = 'https://api.openweathermap.org/data/2.5/';\nexport const API_KEY = 'c51868a10416e26716b878ad7ccacce6';\nexport const FETCH_INTERVAL = 1000 * 60 * 2;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport default function Weather({ weather }) {\n  return (\n    <div className=\"tc\">\n      <span className=\"near-white sans-serif f1 b db\">\n        {Math.round(weather.temperature)}\n        &deg;\n      </span>\n      <span className=\"near-white sans-serif f3 db\">\n        {weather.description}\n      </span>\n    </div>\n  );\n}\n\nWeather.propTypes = {\n  weather: PropTypes.shape({\n    temperature: PropTypes.number.isRequired,\n    description: PropTypes.string.isRequired,\n  }).isRequired,\n};\n","import React, { Component } from 'react';\nimport axios from 'axios';\n\nimport { API_URL, API_KEY, FETCH_INTERVAL } from './config';\nimport WeatherView from './WeatherView';\n\nexport default class Weather extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n      weather: null,\n      intervalId: null,\n    };\n  }\n\n  componentDidMount() {\n    const intervalId = setInterval(() => {\n      this.fetchWeather();\n    }, FETCH_INTERVAL);\n    this.setState({\n      intervalId,\n    });\n    this.fetchWeather();\n  }\n\n  componentWillUnmount() {\n    const { intervalId } = this.state;\n    if (intervalId) {\n      clearInterval(intervalId);\n    }\n  }\n\n  fetchWeather = () => {\n    axios.get(`${API_URL}weather`, {\n      params: {\n        appid: API_KEY,\n        q: 'Nacka Kommun,se',\n        units: 'metric',\n      },\n    }).then((response) => {\n      const weather = response.data;\n      this.setState({\n        loading: false,\n        weather: {\n          temperature: weather.main.temp,\n          description: weather.weather[0].description,\n        },\n      });\n    });\n  }\n\n  render() {\n    const { loading, weather } = this.state;\n\n    if (loading) {\n      return <div className=\"bg-near-white w5 h1\" />;\n    }\n\n    if (!weather) {\n      return null;\n    }\n\n    return (<WeatherView weather={weather} />);\n  }\n}\n","import React from 'react';\nimport moment from 'moment';\n\nimport ListWithFetch from '../../../base/list/ListWithFetch';\n\n/* eslint-disable react/prop-types */\nexport default function GBUpcoming({ mocked }) {\n  return (\n    <ListWithFetch\n      mocked={mocked}\n      label=\"Giant Bomb Upcoming\"\n      url=\"https://www.giantbomb.com/upcoming_json\"\n      fetchInterval={1000 * 60 * 5}\n      firstItemSubtitleOnImage\n      nItemsDisplay={4}\n      transformResponse={response => (response.data.liveNow\n        ? [response.data.liveNow, ...response.data.upcoming]\n        : response.data.upcoming)}\n      transformItem={item => (\n        {\n          title: item.title,\n          subtitle: item.date ? moment(item.date)\n            .add(9, 'hours')\n            .calendar() : (\n              <>\n                <span className=\"live-pulse\" />\n                <span className=\"ml2\">Live</span>\n              </>\n          ),\n          imageUrl: `https://${item.image}`,\n          url: 'https://www.giantbomb.com',\n        }\n      )}\n    />\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { getSunrise, getSunset } from 'sunrise-sunset-js';\nimport moment from 'moment';\n\nexport default function SunriseSunset({ lat, lng }) {\n  const sunrise = getSunrise(lat, lng);\n  const sunset = getSunset(lat, lng);\n  return (\n    <div className=\"tc\">\n      <span className=\"light-silver sans-serif f4 db mt2 mb1\">\n      Sunrise\n      </span>\n      <span className=\"white sans-serif f3 db b\">\n        {moment(sunrise).format('HH:mm')}\n      </span>\n      <span className=\"light-silver sans-serif f4 db mt2 mb1\">\n      Sunset\n      </span>\n      <span className=\"white sans-serif f3 db b\">\n        {moment(sunset).format('HH:mm')}\n      </span>\n    </div>\n  );\n}\nSunriseSunset.propTypes = {\n  lat: PropTypes.number.isRequired,\n  lng: PropTypes.number.isRequired,\n};\n","import React from 'react';\nimport moment from 'moment';\nimport xmlParser from 'fast-xml-parser';\n\nimport ListWithFetch from '../../base/list/ListWithFetch';\n\nexport default function News() {\n  return (\n    <ListWithFetch\n      label=\"New on Game Pass\"\n      url=\"https://news.xbox.com/en-us/feed/\"\n      fetchInterval={1000 * 60 * 15}\n      transformResponse={response => xmlParser.parse(response.data,\n        { ignoreAttributes: false }).rss.channel.item\n        .filter(item => item.title.includes('Game Pass'))}\n      transformItem={item => ({\n        title: item.title,\n        subtitle: moment(item.pubDate).calendar(),\n        url: item.link,\n        imageUrl: item['media:thumbnail']['@_url'],\n      })}\n    />\n  );\n}\n","import React from 'react';\nimport GBLatestVideos from './components/dashboard/giant-bomb/LatestVideos/LatestVideos';\nimport NewMusic from './components/dashboard/upcoming-music/NewMusic';\nimport GameReleases from './components/dashboard/game-releases/GameReleases';\nimport Recipes from './components/dashboard/recipes/Recipes';\nimport RecipesBA from './components/dashboard/recipes/RecipesBA';\nimport Standings from './components/dashboard/allsvenskan/Standings';\nimport StandingsBandy from './components/dashboard/elitserien-bandy/Standings';\nimport Time from './components/dashboard/time/Time';\nimport Weather from './components/dashboard/weather/Weather';\nimport News from './components/dashboard/news/News';\nimport GBUpcoming from './components/dashboard/giant-bomb/UpcomingVideos/UpcomingVideos';\nimport UpcomingBeer from './components/dashboard/systembolaget/UpcomingBeer';\nimport Stocks from './components/dashboard/stocks/Stocks';\nimport SunriseSunset from './components/dashboard/sunrise-sunset/SunriseSunset';\nimport Podcasts from './components/dashboard/podcasts/Podcasts';\nimport XboxNews from './components/dashboard/xbox-wire/News';\n\nconst components = [\n  <div className=\"tc pa4 mt4\">\n    <Time />\n    <div className=\"mv4\">\n      <SunriseSunset lat={59.305377} lng={18.145041} />\n    </div>\n    <Weather />\n  </div>,\n  <GBUpcoming />,\n   <GameReleases />,\n  /*<NewMusic />*/,\n /* <News\n    label=\"News\"\n    filter={{ type: 'sources', value: 'reuters' }}\n  />,*/\n  <XboxNews />,\n  <GBLatestVideos />,\n  /*<Stocks\n    stocks={[{\n      symbol: 'IMMU.ST',\n      acquiredAt: 11.55,\n    }, {\n      symbol: 'TEL2-B.ST',\n      acquiredAt: 123.45,\n    }]}\n  />,*/\n  <Recipes />,\n  <RecipesBA />,\n  //<Standings />,\n  /*<StandingsBandy />,\n  <UpcomingBeer />,\n  <Podcasts />,*/\n];\n\nconst componentWidth = 'w-20';\nconst componentPadding = 'ph3';\n\nfunction App() {\n  return (\n    <div className=\"bg-near-black pv2 ph4\">\n      <div className=\"fl w-100 cf\">\n        {\n        components.map(component => (\n          <div className={`${componentWidth} ${componentPadding} fl min-h6 `}>\n            {component}\n          </div>\n        ))\n      }\n      </div>\n    </div>\n  );\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}