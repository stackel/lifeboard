{"version":3,"sources":["components/dashboard/giant-bomb/config.js","components/base/list/item/components/Title.jsx","components/base/list/item/components/Subtitle.jsx","components/base/list/item/components/Image.jsx","components/base/list/item/Item.jsx","components/base/list/dialog/Dialog.jsx","components/base/list/List.jsx","resources/config/api.js","components/base/list/FetchWithInterval.jsx","components/base/list/ListWithFetch.jsx","components/dashboard/giant-bomb/LatestVideos.jsx","components/dashboard/giant-bomb/LiveShows.jsx","components/dashboard/upcoming-music/UpcomingMusic.jsx","components/dashboard/giant-bomb/GameReleases.jsx","components/dashboard/recipes/Recipes.jsx","components/dashboard/allsvenskan/Standings.jsx","components/dashboard/time/TimeView.jsx","components/dashboard/time/Time.jsx","resources/config/weather.js","components/dashboard/weather/WeatherView.jsx","components/dashboard/weather/Weather.jsx","resources/config/philips-hue.js","components/dashboard/philips-hue/PhilipsHueLight.jsx","components/dashboard/philips-hue/PhilipsHueLightList.jsx","components/dashboard/philips-hue/PhilipsHue.jsx","components/dashboard/news/News.jsx","components/dashboard/giant-bomb/UpcomingVideos.jsx","components/dashboard/systembolaget/UpcomingBeer.jsx","components/dashboard/stocks/Stocks.jsx","components/dashboard/sunrise-sunset/SunriseSunset.jsx","App.js","serviceWorker.js","index.js"],"names":["API_KEY","API_URL","Title","_ref","title","loading","link","react_default","a","createElement","className","href","concat","target","rel","Subtitle","subtitle","Image","url","alt","show","src","Item","item","showImage","imageUrl","defaultProps","ListDialog","list","open","onClose","noImages","limitTo","Dialog_default","aria-labelledby","List","Object","assign","items","label","_useState","useState","_useState2","slicedToArray","dialogOpen","setDialogOpen","toConsumableArray","Array","keys","map","i","key","moment","format","slice","length","Button_default","color","onClick","CORS_ANYWHERE_URL","FetchWithInterval","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","fetch","_this$props","params","corsAnywhere","headers","axios","get","then","response","setState","error","state","intervalId","_this2","fetchInterval","setInterval","clearInterval","_this$state","children","Component","ListWithFetch","nItemsDisplay","nItemsTotal","transformResponse","transformItem","FetchWithInterval_FetchWithInterval","GBLatestVideos","field_list","api_key","data","results","name","publish_date","add","fromNow","site_detail_url","image","medium_url","LiveShows","video","channel_name","history","deck","undefined","GENRE_ID_LIST","UpcomingMusic","feed","filter","album","genres","genre","includes","genreId","artistName","releaseDate","calendar","lastDay","sameDay","nextDay","lastWeek","nextWeek","sameElse","artworkUrl100","GameReleases","game","expected_release_month","expected_release_day","expected_release_year","objectSpread","date","subtract","sort","b","getFirstImageSource","s","tmp","document","innerHTML","querySelector","getAttribute","Recipes","xmlParser","parse","rss","channel","pubDate","Standings","JSON","result","position","team","points","round","Time","time","updateTime","TimeView_Time","Weather","weather","Math","temperature","description","fetchWeather","appid","q","units","main","temp","WeatherView_Weather","PhilipsHueLight","light","on","circleColor","type","id","PhilipsHueLightList","lights","onLightClicked","onAllLightsClicked","allLightsOn","allLightsButtonClasses","PhilipsHue","fetchLights","forEach","push","prevState","put","News","_ref2","defineProperty","value","articles","urlToImage","publishedAt","GBUpcoming","upcoming","LABEL","UpcomingBeer","Ocp-Apim-Subscription-Key","SortBy","SubCategory","SellStartDateFrom","SellStartDateTo","beers","Hits","beer","IsInStoreSearchAssortment","ProductNameBold","ProductNameThin","SellStartDate","trim","replace","toLowerCase","ProductNumber","Stocks","symbol","outputsize","apikey","function","dataWithDates","sortedDataWithDates","latestValue","nextToLatestValue","latestClose","nextToLatestClose","toFixed","abs","SunriseSunset","lat","lng","sunrise","getSunrise","sunset","getSunset","App","Time_Time","Weather_Weather","PhilipsHue_PhilipsHue","Boolean","window","location","hostname","match","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.932dcde3.chunk.js","sourcesContent":["export const API_KEY = 'd6570a6b091038395145cafcf7d50ae3bef07e5a';\nexport const API_URL = 'https://www.giantbomb.com/api/';\nexport const GAME_URL = 'https://www.giantbomb.com/game/';\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n\nexport default function Title({ title, loading, link }) {\n  if (loading) {\n    return <div className=\"bg-dark-gray h1 w5 mv2\" />;\n  }\n\n  const textClasses = 'db sans-serif f4 mv2 near-white';\n  if (link) {\n    return (\n      <a\n        href={link}\n        className={`${textClasses} link`}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        {title}\n      </a>\n    );\n  }\n\n  return (\n    <span className={textClasses}>\n      {title}\n    </span>\n  );\n}\n\nTitle.propTypes = {\n  title: PropTypes.string,\n  loading: PropTypes.bool,\n  link: PropTypes.string,\n};\n\nTitle.defaultProps = {\n  title: '',\n  loading: false,\n  link: null,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n\nexport default function Subtitle({ subtitle, loading }) {\n  if (loading) {\n    return <div className=\"bg-dark-gray h1 w4 mv2\" />;\n  }\n  return (\n    <span className=\"db sans-serif f5 light-silver truncate\">\n      {subtitle}\n    </span>\n  );\n}\n\nSubtitle.propTypes = {\n  subtitle: PropTypes.string,\n  loading: PropTypes.bool,\n};\n\nSubtitle.defaultProps = {\n  loading: false,\n  subtitle: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport default function Image({\n  url, alt, loading, show,\n}) {\n  if (!show) {\n    return null;\n  }\n  if (loading) {\n    return <div className=\"h5 bg-dark-gray br2\" />;\n  }\n  return (\n    <img\n      className=\"h5 contain of-c w-100 br2\"\n      src={url}\n      alt={alt}\n    />\n  );\n}\n\nImage.propTypes = {\n  url: PropTypes.string,\n  alt: PropTypes.string.isRequired,\n  loading: PropTypes.bool,\n  show: PropTypes.bool,\n};\n\nImage.defaultProps = {\n  url: null,\n  loading: false,\n  show: true,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Title from './components/Title';\nimport Subtitle from './components/Subtitle';\nimport Image from './components/Image';\n\nexport default function Item({ item, showImage, loading }) {\n  return (\n    <div>\n      <Image\n        url={item.imageUrl}\n        alt={item.title}\n        show={showImage}\n        loading={loading}\n      />\n      <Title link={item.url} title={item.title} loading={loading} />\n      <Subtitle subtitle={item.subtitle} loading={loading} />\n    </div>\n  );\n}\n\nItem.propTypes = {\n  item: PropTypes.shape({\n    url: PropTypes.string,\n    imageUrl: PropTypes.string,\n    title: PropTypes.string,\n    subtitle: PropTypes.string,\n  }),\n  showImage: PropTypes.bool.isRequired,\n  loading: PropTypes.bool,\n};\n\nItem.defaultProps = {\n  loading: false,\n  item: {},\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Dialog from '@material-ui/core/Dialog';\n\nimport List from '../List';\n\nexport default function ListDialog({\n  list, open, onClose, noImages, limitTo,\n}) {\n  return (\n    <Dialog\n      aria-labelledby=\"show-all-list-items\"\n      open={open}\n      onClose={onClose}\n    >\n      <div className=\"ph4 pv2 bg-near-black\">\n        <List\n          limitTo={limitTo}\n          noImages={noImages}\n          {...list}\n        />\n      </div>\n    </Dialog>\n  );\n}\n\nListDialog.propTypes = {\n  list: PropTypes.shape(List.propTypes).isRequired,\n  open: PropTypes.bool.isRequired,\n  onClose: PropTypes.func.isRequired,\n  noImages: PropTypes.bool,\n  limitTo: PropTypes.number,\n};\n\nListDialog.defaultProps = {\n  noImages: false,\n  limitTo: 20,\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport moment from 'moment';\n\nimport Item from './item/Item';\n/* eslint-disable import/no-cycle */\nimport Dialog from './dialog/Dialog';\n\nexport default function List({\n  items, loading, limitTo, label, noImages,\n}) {\n  const [dialogOpen, setDialogOpen] = useState(false);\n  function dialogOpenClicked() {\n    setDialogOpen(true);\n  }\n  function dialogCloseClicked() {\n    setDialogOpen(false);\n  }\n\n  if (loading) {\n    return (\n      <div>\n        <h2 className=\"near-white sans-serif f3 mb3\">\n          {label}\n        </h2>\n        {[...Array(limitTo).keys()]\n          .map(i => (\n            <div className=\"mb4\" key={i}>\n              <Item\n                loading={loading}\n                showImage={i < 1 && !noImages}\n              />\n            </div>\n          ))}\n      </div>\n    );\n  }\n\n  return (\n    <div>\n      <h2 className=\"near-white sans-serif f3 mb2\">\n        {label}\n      </h2>\n      <h2 className=\"sans-serif f6 light-silver mb3\">\n        {`Updated ${moment().format('HH:mm')}`}\n      </h2>\n      {\n        items\n          .slice(0, limitTo)\n          .map((item, i) => (\n            <div className=\"mb3\" key={item.title}>\n              <Item\n                key={item.title}\n                item={item}\n                showImage={i < 1 && !noImages}\n              />\n            </div>\n          ))\n      }\n      {\n        items.length > limitTo\n        && (\n        <Button\n          color=\"primary\"\n          onClick={dialogOpenClicked}\n        >\n          Show more...\n        </Button>\n        )\n    }\n      <Dialog\n        list={{\n          items, loading, label,\n        }}\n        noImages={noImages}\n        open={dialogOpen}\n        onClose={dialogCloseClicked}\n      />\n    </div>\n  );\n}\n\nList.propTypes = {\n  items: PropTypes.arrayOf(Item.propTypes.item),\n  loading: PropTypes.bool,\n  limitTo: PropTypes.number,\n  label: PropTypes.string,\n  noImages: PropTypes.bool,\n};\n\nList.defaultProps = {\n  loading: false,\n  items: [],\n  limitTo: 3,\n  label: '',\n  noImages: false,\n};\n","export const OPEN_WEATHER_MAP_API_URL = 'https://api.openweathermap.org/data/2.5/';\nexport const CORS_ANYWHERE_URL = 'http://0.0.0.0:8080/';\n","import { Component } from 'react';\nimport axios from 'axios';\nimport PropTypes from 'prop-types';\n\nimport { CORS_ANYWHERE_URL } from '../../../resources/config/api';\n\nexport default class FetchWithInterval extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n      response: [],\n      intervalId: null,\n      error: false,\n    };\n  }\n\n  componentDidMount() {\n    const { fetchInterval } = this.props;\n    const intervalId = setInterval(() => {\n      this.fetch();\n    }, fetchInterval);\n    this.setState({\n      intervalId,\n    });\n    this.fetch();\n  }\n\n  componentWillUnmount() {\n    const { intervalId } = this.state;\n    clearInterval(intervalId);\n  }\n\n  fetch = () => {\n    const {\n      url, params, corsAnywhere, headers,\n    } = this.props;\n    axios.get((corsAnywhere ? CORS_ANYWHERE_URL : '') + url, {\n      params, headers: headers || {},\n    }).then((response) => {\n      this.setState({\n        response,\n        loading: false,\n        error: false,\n      });\n    }, (error) => {\n      this.setState({ loading: false, error });\n    });\n  }\n\n  render() {\n    const { loading, response, error } = this.state;\n    const { children } = this.props;\n    return children(response, loading, error);\n  }\n}\n\nFetchWithInterval.propTypes = {\n  fetchInterval: PropTypes.number,\n  url: PropTypes.string.isRequired,\n  children: PropTypes.func.isRequired,\n  params: PropTypes.objectOf(PropTypes.string),\n  corsAnywhere: PropTypes.bool,\n  headers: PropTypes.objectOf(PropTypes.string),\n};\n\nFetchWithInterval.defaultProps = {\n  fetchInterval: 60000,\n  params: null,\n  corsAnywhere: false,\n  headers: null,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport List from './List';\nimport FetchWithInterval from './FetchWithInterval';\n\nexport default function ListWithFetch({\n  url, label, params, fetchInterval, nItemsDisplay,\n  noImages, nItemsTotal, transformResponse, transformItem,\n}) {\n  return (\n    <FetchWithInterval\n      url={url}\n      params={params}\n      fetchInterval={fetchInterval}\n    >\n      {(response, error, loading) => {\n        if (loading) {\n          return (\n            <List\n              label={label}\n              noImages={noImages}\n              loading\n            />\n          );\n        }\n\n        if (error) {\n          return null;\n        }\n\n        if (response) {\n          const items = transformResponse(response);\n          if (!items) {\n            return null;\n          }\n          return (\n            <List\n              label={label}\n              noImages={noImages}\n              limitTo={nItemsDisplay}\n              items={items\n                .map(item => transformItem(item))\n                .slice(0, nItemsTotal)}\n            />\n          );\n        }\n\n        return null;\n      }}\n    </FetchWithInterval>\n  );\n}\n\nListWithFetch.propTypes = {\n  url: PropTypes.string.isRequired,\n  params: PropTypes.string,\n  label: PropTypes.string,\n  fetchInterval: PropTypes.number,\n  nItemsDisplay: PropTypes.number,\n  nItemsTotal: PropTypes.number,\n  noImages: PropTypes.bool,\n  transformResponse: PropTypes.func,\n  transformItem: PropTypes.func,\n};\n\nListWithFetch.defaultProps = {\n  label: undefined,\n  params: {},\n  fetchInterval: 1000 * 60 * 10,\n  nItemsDisplay: 3,\n  nItemsTotal: 20,\n  noImages: false,\n  transformResponse: response => response,\n  transformItem: item => item,\n};\n","import React from 'react';\nimport moment from 'moment';\n\nimport { API_URL, API_KEY } from './config';\nimport ListWithFetch from '../../base/list/ListWithFetch';\n\nexport default function GBLatestVideos() {\n  return (\n    <ListWithFetch\n      label=\"Latest Giant Bomb Videos\"\n      url={`${API_URL}videos`}\n      params={{\n        field_list: 'name,id,image,publish_date,site_detail_url',\n        api_key: API_KEY,\n        format: 'json',\n      }}\n      fetchInterval={1000 * 60 * 10}\n      transformResponse={response => response.data.results}\n      transformItem={item => ({\n        title: item.name,\n        subtitle: moment(item.publish_date)\n          .add(9, 'hours').fromNow(),\n        url: item.site_detail_url,\n        imageUrl: item.image.medium_url,\n      })}\n    />\n  );\n}\n","import React from 'react';\n\nimport { API_URL, API_KEY } from './config';\nimport ListWithFetch from '../../base/list/ListWithFetch';\n\nexport default function LiveShows() {\n  return (\n    <ListWithFetch\n      label=\"Giant Bomb Live\"\n      url={`${API_URL}chats`}\n      params={{\n        api_key: API_KEY,\n        format: 'json',\n      }}\n      fetchInterval={1000 * 60 * 2}\n      transformResponse={response => response.data.results}\n      transformItem={video => (video.channel_name === 'giantbomb8'\n      && video.history\n        ? {\n          title: video.title,\n          subtitle: video.history[0].name,\n          imageUrl: video.history[0].image.medium_url,\n          url: 'https://www.giantbomb.com/infinite/',\n        }\n        : {\n          title: video.title,\n          subtitle: video.deck,\n          imageUrl: video.image.medium_url,\n          url: video.site_detail_url,\n        })}\n\n    />\n  );\n}\n","import React from 'react';\nimport moment from 'moment';\n\nimport ListWithFetch from '../../base/list/ListWithFetch';\n\nconst GENRE_ID_LIST = ['18'];\n\nexport default function UpcomingMusic() {\n  return (\n    <ListWithFetch\n      label=\"Album Releases\"\n      url=\"https://rss.itunes.apple.com/api/v1/us/apple-music/coming-soon/all/100/explicit.json\"\n      fetchInterval={1000 * 60 * 30}\n      transformResponse={response => response.data.feed.results.filter(\n        album => album.genres.filter(\n          genre => GENRE_ID_LIST.includes(genre.genreId),\n        ).length,\n      )}\n      transformItem={album => ({\n        title: `${album.artistName} - ${album.name}`,\n        subtitle: moment(album.releaseDate).calendar(null, {\n          lastDay: '[Yesterday]',\n          sameDay: '[Today]',\n          nextDay: '[Tomorrow]',\n          lastWeek: '[last] dddd',\n          nextWeek: 'dddd',\n          sameElse: 'd MMMM',\n        }),\n        imageUrl: album.artworkUrl100,\n        url: `https://www.google.com/search?q=${album.artistName} ${album.name}`,\n      }\n      )}\n    />\n\n  );\n}\n","import React from 'react';\nimport moment from 'moment';\n\nimport ListWithFetch from '../../base/list/ListWithFetch';\nimport { API_KEY, API_URL } from './config';\n\nexport default function GameReleases() {\n  return (\n    <ListWithFetch\n      label=\"Game Releases\"\n      url={`${API_URL}games`}\n      params={{\n        api_key: API_KEY,\n        format: 'json',\n        filter: `original_release_date:\n        ${moment().format('YYYY-MM-DD')}|\n        ${moment().add(1, 'month').format('YYYY-MM-DD')}`,\n      }}\n      fetchInterval={1000 * 60 * 10}\n      transformResponse={response => response.data.results\n        .filter(game => game.expected_release_month !== null\n                    && game.expected_release_day !== null\n                    && game.expected_release_year !== null)\n        .map(game => ({\n          ...game,\n          date: moment(\n            [\n              game.expected_release_year,\n              game.expected_release_month - 1,\n              game.expected_release_day,\n            ],\n          ),\n        }))\n        .filter(game => game.date > moment().subtract(1, 'days'))\n        .sort((a, b) => a.date - b.date)\n      }\n      transformItem={item => ({\n        title: item.name,\n        imageUrl: item.image.medium_url,\n        url: item.site_detail_url,\n        subtitle: item.date.calendar(null, {\n          lastDay: '[Yesterday]',\n          sameDay: '[Today]',\n          nextDay: '[Tomorrow]',\n          lastWeek: '[last] dddd',\n          nextWeek: 'dddd',\n          sameElse: 'L',\n        }),\n      })}\n    />\n  );\n}\n","import React from 'react';\nimport moment from 'moment';\nimport xmlParser from 'fast-xml-parser';\n\nimport ListWithFetch from '../../base/list/ListWithFetch';\n\nconst getFirstImageSource = (s) => {\n  const tmp = document.createElement('div');\n  tmp.innerHTML = s;\n  return tmp.querySelector('img').getAttribute('src');\n};\n\nexport default function Recipes() {\n  return (\n    <ListWithFetch\n      label=\"Recipes\"\n      url=\"https://www.budgetbytes.com/feed/\"\n      fetchInterval={1000 * 60 * 15}\n      transformResponse={response => xmlParser\n        .parse(response.data).rss.channel.item}\n      transformItem={item => ({\n        title: item.title,\n        subtitle: moment(item.pubDate).calendar(),\n        url: item.link,\n        imageUrl: getFirstImageSource(item['content:encoded']),\n      })}\n    />\n  );\n}\n","import React from 'react';\n\nimport ListWithFetch from '../../base/list/ListWithFetch';\n\nexport default function Standings() {\n  return (\n    <ListWithFetch\n      label=\"Allsvenskans tabell\"\n      url=\"https://allsvenskan-api.herokuapp.com/as\"\n      fetchInterval={1000 * 60 * 10}\n      nItemsDisplay={7}\n      noImages\n      transformResponse={response => JSON.parse(response.data).result.item}\n      transformItem={item => ({\n        title: `${item.position}. ${item.team}`,\n        subtitle: `${item.points} poäng - ${item.round} spelade`,\n      })}\n    />\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\n\nexport default function Time({ time }) {\n  return (\n    <span className=\"near-white sans-serif f-subheadline b\">\n      {time.format('HH:mm')}\n      <span className=\"near-white f2 fw4 db\">\n        {time.format('MMMM Do')}\n      </span>\n    </span>\n  );\n}\n\nTime.propTypes = {\n  time: PropTypes.instanceOf(moment).isRequired,\n};\n","import React, { Component } from 'react';\nimport moment from 'moment';\n\nimport TimeView from './TimeView';\n\nexport default class Time extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      time: null,\n      intervalId: null,\n    };\n  }\n\n  componentDidMount() {\n    const intervalId = setInterval(() => {\n      this.updateTime();\n    }, 1000);\n    this.setState({\n      intervalId,\n    });\n    this.updateTime();\n  }\n\n  componentWillUnmount() {\n    const { intervalId } = this.state;\n    if (intervalId) {\n      clearInterval(intervalId);\n    }\n  }\n\n  updateTime = () => {\n    this.setState({\n      time: moment(),\n    });\n  }\n\n  render() {\n    const { time } = this.state;\n\n    if (!time) { return null; }\n    return (<TimeView time={time} />);\n  }\n}\n","export const API_URL = 'https://api.openweathermap.org/data/2.5/';\nexport const API_KEY = 'c51868a10416e26716b878ad7ccacce6';\nexport const FETCH_INTERVAL = 1000 * 60 * 2;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport default function Weather({ weather }) {\n  return (\n    <div className=\"tc\">\n      <span className=\"near-white sans-serif f-subheadline b db\">\n        {Math.round(weather.temperature)}\n        &deg;\n      </span>\n      <span className=\"near-white sans-serif f2 db\">\n        {weather.description}\n      </span>\n    </div>\n  );\n}\n\nWeather.propTypes = {\n  weather: PropTypes.shape({\n    temperature: PropTypes.number.isRequired,\n    description: PropTypes.string.isRequired,\n  }).isRequired,\n};\n","import React, { Component } from 'react';\nimport axios from 'axios';\n\nimport { API_URL, API_KEY, FETCH_INTERVAL }\n  from '../../../resources/config/weather';\nimport WeatherView from './WeatherView';\n\nexport default class Weather extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n      weather: null,\n      intervalId: null,\n    };\n  }\n\n  componentDidMount() {\n    const intervalId = setInterval(() => {\n      this.fetchWeather();\n    }, FETCH_INTERVAL);\n    this.setState({\n      intervalId,\n    });\n    this.fetchWeather();\n  }\n\n  componentWillUnmount() {\n    const { intervalId } = this.state;\n    if (intervalId) {\n      clearInterval(intervalId);\n    }\n  }\n\n  fetchWeather = () => {\n    axios.get(`${API_URL}weather`, {\n      params: {\n        appid: API_KEY,\n        q: 'Nacka,se',\n        units: 'metric',\n      },\n    }).then((response) => {\n      const weather = response.data;\n      this.setState({\n        loading: false,\n        weather: {\n          temperature: weather.main.temp,\n          description: weather.weather[0].description,\n        },\n      });\n    });\n  }\n\n  render() {\n    const { loading, weather } = this.state;\n\n    if (loading) {\n      return <div className=\"bg-near-white w5 h1\" />;\n    }\n\n    if (!weather) {\n      return null;\n    }\n\n    return (<WeatherView weather={weather} />);\n  }\n}\n","export const API_URL = 'http://192.168.86.27/api/lmgn3wPSGyP4ucjGgpoqZMpxVMWCaI0jGkJ1g7ta/';\nexport const FETCH_INTERVAL = 10000;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport default function PhilipsHueLight({ light, onClick }) {\n  const { on } = light.state;\n  const circleColor = on ? 'yellow' : 'moon-gray';\n  return (\n    <div className=\"w-100\">\n      <div>\n        <div className=\"tc\">\n          <button\n            type=\"button\"\n            onClick={() => onClick(light.id, on)}\n            className={\n              `bg-${circleColor} b--${circleColor} h2 w2 br-100 pointer link grow dim`\n            }\n          />\n        </div>\n        <div className=\"tc\">\n          <span className=\"near-white sans-serif f4 fw5 mb1 mt0 truncate\">\n            {light.name}\n          </span>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nPhilipsHueLight.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  light: PropTypes.shape({\n    id: PropTypes.string,\n    name: PropTypes.string,\n    productname: PropTypes.string,\n    state: PropTypes.shape({\n      on: PropTypes.bool,\n    }),\n  }).isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport PhilipsHueLight from './PhilipsHueLight';\n\nexport default function PhilipsHueLightList({\n  lights, onLightClicked,\n  onAllLightsClicked,\n}) {\n  const allLightsOn = lights.filter(light => light.state.on).length === lights.length;\n  const allLightsButtonClasses = allLightsOn ? 'bg-yellow b--yellow'\n    : 'bg-light-gray b--light-gray';\n  return (\n    <div>\n      <div className=\"cf\">\n        <h2 className=\"near-white sans-serif f2 mt2 mb2\"> Light Control </h2>\n        <div className=\"\" />\n        <div className=\" tc pt3 pb4\">\n          <button\n            type=\"button\"\n            onClick={() => onAllLightsClicked(allLightsOn)}\n            className={`${allLightsButtonClasses} h3 w3 v-mid br-100 pointer link grow dim`}\n          />\n          <div>\n            <span className=\"near-white sans-serif f4 truncate\">\n              All lights\n            </span>\n          </div>\n        </div>\n        {\n      lights.map(light => (\n        <div\n          key={light.id}\n          className=\"dib w-100 fl mb3\"\n        >\n          <PhilipsHueLight\n            light={light}\n            onClick={onLightClicked}\n          />\n        </div>\n      ))\n    }\n      </div>\n\n    </div>\n  );\n}\n\nPhilipsHueLightList.propTypes = {\n  lights: PropTypes.arrayOf(PhilipsHueLight.propTypes.light),\n  onLightClicked: PropTypes.func.isRequired,\n  onAllLightsClicked: PropTypes.func.isRequired,\n};\n\nPhilipsHueLightList.defaultProps = {\n  lights: [],\n};\n","import React, { Component } from 'react';\nimport axios from 'axios';\n\nimport { API_URL, FETCH_INTERVAL } from '../../../resources/config/philips-hue';\nimport PhilipsHueLightList from './PhilipsHueLightList';\n\nexport default class PhilipsHue extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      lights: [],\n      intervalId: null,\n    };\n  }\n\n  componentDidMount() {\n    const intervalId = setInterval(() => {\n      this.fetchLights();\n    }, FETCH_INTERVAL);\n    this.setState({\n      intervalId,\n    });\n    this.fetchLights();\n  }\n\n  componentWillUnmount() {\n    const { intervalId } = this.state;\n    clearInterval(intervalId);\n  }\n\n  fetchLights = () => {\n    axios.get(`${API_URL}lights`).then((response) => {\n      if (response !== null) {\n        const { data } = response;\n        const lights = [];\n\n        Object.keys(data).forEach(\n          key => lights.push({\n            ...data[key], id: key,\n          }),\n        );\n        this.setState({ lights });\n      }\n    });\n  }\n\n  onLightClicked = (id, prevState) => {\n    axios.put(`${API_URL}lights/${id}/state`,\n      { on: !prevState }).then(() => {\n      this.fetchLights();\n    });\n  }\n\n  onAllLightsClicked = (prevState) => {\n    const { lights } = this.state;\n    lights.forEach((light) => {\n      axios.put(`${API_URL}lights/${light.id}/state`,\n        { on: !prevState }).then(() => {\n      });\n    });\n  }\n\n  render() {\n    const { lights } = this.state;\n    if (!lights || !lights.length) {\n      return null;\n    }\n    return (\n      <div>\n        <PhilipsHueLightList\n          lights={lights}\n          onLightClicked={this.onLightClicked}\n          onAllLightsClicked={this.onAllLightsClicked}\n        />\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\n\nimport ListWithFetch from '../../base/list/ListWithFetch';\n\nexport default function News({ filter, label }) {\n  return (\n    <ListWithFetch\n      label={label}\n      url=\"https://newsapi.org/v2/top-headlines\"\n      fetchInterval={1000 * 60 * 1}\n      params={{\n        [filter.type]: filter.value,\n        apiKey: '8fcc0e50139642efab56a0fcd657cb23',\n      }}\n      transformResponse={response => response.data.articles}\n      transformItem={item => ({\n        imageUrl: item.urlToImage,\n        title: item.title,\n        subtitle: moment(item.publishedAt).fromNow(),\n        url: item.url,\n      })}\n    />\n  );\n}\n\nNews.propTypes = {\n  filter: PropTypes.shape({\n    type: PropTypes.string,\n    value: PropTypes.string,\n  }),\n  label: PropTypes.string,\n};\n\nNews.defaultProps = {\n  label: '',\n  filter: {\n    type: 'country',\n    value: 'se',\n  },\n};\n","import React from 'react';\nimport moment from 'moment';\n\nimport ListWithFetch from '../../base/list/ListWithFetch';\n\nexport default function GBUpcoming() {\n  return (\n    <ListWithFetch\n      label=\"Giant Bomb Upcoming\"\n      url=\"https://www.giantbomb.com/upcoming_json\"\n      fetchInterval={1000 * 60 * 5}\n      transformResponse={response => response.data.upcoming}\n      transformItem={item => (\n        {\n          title: item.title,\n          subtitle: moment(item.date)\n            .add(9, 'hours')\n            .calendar(),\n          imageUrl: `https://${item.image}`,\n          url: 'https://www.giantbomb.com',\n        }\n      )}\n    />\n  );\n}\n","import React from 'react';\nimport moment from 'moment';\nimport List from '../../base/list/List';\n\nimport FetchWithInterval from '../../base/list/FetchWithInterval';\n\nconst LABEL = 'Nya Öler';\nexport default function UpcomingBeer() {\n  return (\n    <FetchWithInterval\n      headers={{ 'Ocp-Apim-Subscription-Key': 'ed6bfcdbf6074559bd67365384159e63' }}\n      url=\"https://api-extern.systembolaget.se/product/v1/product/search\"\n      params={{\n        SortBy: 'SellStartDate',\n        SubCategory: 'Öl',\n        SellStartDateFrom: moment().subtract(5, 'day').format('YYYY-MM-DD'),\n        SellStartDateTo: moment().add(14, 'day').format('YYYY-MM-DD'),\n      }}\n    >\n      {(response, loading, error) => {\n        if (loading) {\n          return (\n            <List\n              label={LABEL}\n              limitTo={1}\n              loading\n              fetchInterval={1000 * 60 * 5}\n            />\n          );\n        }\n        if (error) {\n          return null;\n        }\n        if (response) {\n          const beers = response.data.Hits;\n          if (!beers) {\n            return null;\n          }\n          return (\n            <div>\n              <List\n                label={LABEL}\n                noImages\n                limitTo={6}\n                items={beers.filter(beer => beer.IsInStoreSearchAssortment.includes('0237'),\n                /* || beer.IsInStoreSearchAssortment.includes('0220')\n                || beer.IsInStoreSearchAssortment.includes('0167')\n                || beer.IsInStoreSearchAssortment.includes('0202') */\n                /* eslint-disable function-paren-newline */\n                ).map(beer => (\n                  {\n                    title: `${beer.ProductNameBold} ${beer.ProductNameThin || ''}`,\n                    subtitle: moment(beer.SellStartDate).calendar(null, {\n                      lastDay: '[Yesterday]',\n                      sameDay: '[Today]',\n                      nextDay: '[Tomorrow]',\n                      lastWeek: '[last] dddd',\n                      nextWeek: 'dddd',\n                      sameElse: 'L',\n                    }),\n                    url: `https://www.systembolaget.se/dryck/ol/${beer.ProductNameBold\n                      .trim()\n                      .replace(/\\s+/g, '-')\n                      .replace(/\\./g, '')\n                      .replace(/\\u00e4/g, 'a')\n                      .replace(/\\u00f6/g, 'o')\n                      .replace(/\\\\|\\//g, '')\n                      .toLowerCase()}-${beer.ProductNumber}`,\n                    imageUrl: 'https://www.systembolaget.se/content/assets/images/products/product-placeholder.png',\n                  }\n                ))}\n              />\n            </div>\n          );\n        }\n        return null;\n      }}\n\n    </FetchWithInterval>\n  );\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\n\nimport FetchWithInterval from '../../base/list/FetchWithInterval';\n\nconst API_KEY = 'GIUYQBXKZDY2VNT7';\nexport default function Stocks({ symbol }) {\n  return (\n    <FetchWithInterval\n      url=\"https://www.alphavantage.co/query\"\n      params={{\n        outputsize: 'compact',\n        apikey: API_KEY,\n        symbol,\n        function: 'TIME_SERIES_DAILY',\n        fetchInterval: '1000 * 60 * 10',\n      }}\n    >\n      {(response, loading, error) => {\n        if (error) {\n          return null;\n        }\n        if (loading) {\n          return (\n            <h2 className=\"near-white sans-serif f3 mb3\">\n                      Stocks\n            </h2>\n          );\n        }\n        const data = response.data['Time Series (Daily)'];\n        if (!data) {\n          return null;\n        }\n\n        const dataWithDates = [];\n        Object.keys(data).forEach((key) => {\n          dataWithDates.push({ ...data[key], date: moment(key) });\n        });\n\n        const sortedDataWithDates = dataWithDates.sort((a, b) => a.date + b.date);\n\n        const latestValue = sortedDataWithDates[0];\n        const nextToLatestValue = sortedDataWithDates[1];\n        if (!latestValue || !nextToLatestValue) {\n          return null;\n        }\n\n        const latestClose = Math.round(latestValue['4. close'] * 100) / 100;\n        const nextToLatestClose = Math.round(nextToLatestValue['4. close'] * 100) / 100;\n\n        return (\n          <div className=\"\">\n            <h2 className=\"near-white sans-serif f3 mb3\">\n            Stocks\n            </h2>\n            <h2 className=\"sans-serif f6 light-silver mb3\">\n              {`Updated ${moment().format('HH:mm')}`}\n            </h2>\n            <div className=\"sans-serif light-silver tc f3 mt5\">\n              {symbol}\n            </div>\n            <div className=\" tc f1 near-white sans-serif mv3 b\">\n              {latestClose.toFixed(2)}\n            </div>\n            {\n              latestClose > nextToLatestClose\n                ? (\n                  <div className=\"tc sans-serif f3 green\">\n                    {`${Math.abs((((nextToLatestClose / latestClose) - 1) * 100)\n                      .toFixed(1))}%`}\n                    <span> &#8599; </span>\n                  </div>\n                )\n                : (\n                  <div className=\"tc sans-serif f3 red\">\n                    {`${Math.abs((((nextToLatestClose / latestClose) - 1) * 100)\n                      .toFixed(1))}%`}\n                    <span> &#8601; </span>\n                  </div>\n                )\n            }\n          </div>\n        );\n      }}\n    </FetchWithInterval>\n  );\n}\n\nStocks.propTypes = {\n  symbol: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { getSunrise, getSunset } from 'sunrise-sunset-js';\nimport moment from 'moment';\n\nexport default function SunriseSunset({ lat, lng }) {\n  const sunrise = getSunrise(lat, lng);\n  const sunset = getSunset(lat, lng);\n  return (\n    <div className=\"tc\">\n      <span className=\"light-silver sans-serif f3 db mt2 mb1\">\n      Sunrise\n      </span>\n      <span className=\"white sans-serif f2 db b\">\n        {moment(sunrise).format('HH:mm')}\n      </span>\n      <span className=\"light-silver sans-serif f3 db mt2 mb1\">\n      Sunset\n      </span>\n      <span className=\"white sans-serif f2 db b\">\n        {moment(sunset).format('HH:mm')}\n      </span>\n    </div>\n  );\n}\nSunriseSunset.propTypes = {\n  lat: PropTypes.number.isRequired,\n  lng: PropTypes.number.isRequired,\n};\n","import React from 'react';\nimport GBLatestVideos from './components/dashboard/giant-bomb/LatestVideos';\nimport GBCurrentLive from './components/dashboard/giant-bomb/LiveShows';\nimport UpcomingMusic from './components/dashboard/upcoming-music/UpcomingMusic';\nimport GameReleases from './components/dashboard/giant-bomb/GameReleases';\nimport Recipes from './components/dashboard/recipes/Recipes';\nimport Standings from './components/dashboard/allsvenskan/Standings';\n// import Holidays from './components/dashboard/holidays/Holidays';\nimport Time from './components/dashboard/time/Time';\nimport Weather from './components/dashboard/weather/Weather';\nimport PhilipsHue from './components/dashboard/philips-hue/PhilipsHue';\n// import DeparturesWithFetch from './components/dashboard/departures/DeparturesWithFetch';\nimport News from './components/dashboard/news/News';\nimport GBUpcoming from './components/dashboard/giant-bomb/UpcomingVideos';\nimport UpcomingBeer from './components/dashboard/systembolaget/UpcomingBeer';\nimport Stocks from './components/dashboard/stocks/Stocks';\nimport SunriseSunset from './components/dashboard/sunrise-sunset/SunriseSunset';\n\nfunction App() {\n  return (\n    <div className=\"bg-near-black mt4\">\n\n      <div className=\"cf fl w-20 pt5 pr2\">\n        <div className=\"tc\">\n          <Time />\n          <div className=\"mv4\">\n            <SunriseSunset lat={59.305377} lng={18.145041} />\n          </div>\n          <Weather />\n        </div>\n        <div className=\"pt5 tc\">\n          <PhilipsHue />\n        </div>\n      </div>\n\n      <div className=\"fl w-80 pr4\">\n        <div className=\"cf \">\n          <div className=\"fl w-20 pr2\">\n            <GBCurrentLive />\n          </div>\n          <div className=\"fl w-20 pr2 pl2\">\n            <GameReleases />\n          </div>\n          <div className=\"fl w-20 pl2 pr2\">\n            <GBUpcoming />\n          </div>\n          <div className=\"fl w-20 pl2 pr2\">\n            <UpcomingMusic />\n          </div>\n          <div className=\"fl w-20 pl2\">\n            <News\n              label=\"News\"\n              filter={{ type: 'sources', value: 'reuters' }}\n            />\n          </div>\n        </div>\n\n        <div className=\"cf\">\n          <div className=\"fl w-20 pr2 pl2\">\n            <GBLatestVideos />\n          </div>\n          <div className=\"fl w-20 pl2 pr2\">\n            <Stocks symbol=\"STO:IMMU\" />\n          </div>\n          <div className=\"fl w-20 pl2 pr2\">\n            <UpcomingBeer />\n\n          </div>\n          <div className=\"fl w-20 pl2 pr2\">\n            <Standings />\n          </div>\n          <div className=\"fl w-20 pl2\">\n            <Recipes />\n\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}